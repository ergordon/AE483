   1              		.file	"sdk.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	SPI0Handler
  13              	SPI0Handler:
  14              	.LFB2:
  15              		.file 1 "sdk.c"
   1:sdk.c         **** /*
   2:sdk.c         **** 
   3:sdk.c         **** AscTec SDK 3.0
   4:sdk.c         **** 
   5:sdk.c         **** Copyright (c) 2011, Ascending Technologies GmbH
   6:sdk.c         **** All rights reserved.
   7:sdk.c         **** 
   8:sdk.c         **** Redistribution and use in source and binary forms, with or without
   9:sdk.c         **** modification, are permitted provided that the following conditions are met:
  10:sdk.c         **** 
  11:sdk.c         ****  * Redistributions of source code must retain the above copyright notice,
  12:sdk.c         ****    this list of conditions and the following disclaimer.
  13:sdk.c         ****  * Redistributions in binary form must reproduce the above copyright
  14:sdk.c         ****    notice, this list of conditions and the following disclaimer in the
  15:sdk.c         ****    documentation and/or other materials provided with the distribution.
  16:sdk.c         **** 
  17:sdk.c         **** THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
  18:sdk.c         **** EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  19:sdk.c         **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  20:sdk.c         **** DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
  21:sdk.c         **** DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  22:sdk.c         **** (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  23:sdk.c         **** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  24:sdk.c         **** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  25:sdk.c         **** LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  26:sdk.c         **** OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  27:sdk.c         **** DAMAGE.
  28:sdk.c         **** 
  29:sdk.c         ****  */
  30:sdk.c         **** 
  31:sdk.c         **** #include "main.h"
  32:sdk.c         **** #include "sdk.h"
  33:sdk.c         **** #include "LL_HL_comm.h"
  34:sdk.c         **** #include "gpsmath.h"
  35:sdk.c         **** #include "sdk_telemetry.h"
  36:sdk.c         **** #include "uart.h"
  37:sdk.c         **** #include "system.h"
  38:sdk.c         **** #include "lpc_aci_eeprom.h"
  39:sdk.c         **** #include "lab.h"
  40:sdk.c         **** #include "Utilites.h"
  41:sdk.c         **** 
  42:sdk.c         **** //Dan Block Add
  43:sdk.c         **** #include <stdio.h>
  44:sdk.c         **** #include "LPC214x.h"
  45:sdk.c         **** #include "hardware.h"
  46:sdk.c         **** #include "irq.h"
  47:sdk.c         **** 
  48:sdk.c         **** #define USONIC_INIT_DELAY 2000
  49:sdk.c         **** #define SWITCH_INIT_DELAY 2000
  50:sdk.c         **** #define SDCARD_START_DELAY 4000
  51:sdk.c         **** //End Dan Block Add
  52:sdk.c         **** 
  53:sdk.c         **** #ifdef MATLAB
  54:sdk.c         **** #include "..\custom_mdl\onboard_matlab_ert_rtw\onboard_matlab.h"
  55:sdk.c         **** #endif
  56:sdk.c         **** 
  57:sdk.c         **** struct WO_SDK_STRUCT WO_SDK;
  58:sdk.c         **** struct WO_CTRL_INPUT WO_CTRL_Input;
  59:sdk.c         **** struct RO_RC_DATA RO_RC_Data;
  60:sdk.c         **** struct RO_ALL_DATA RO_ALL_Data;
  61:sdk.c         **** struct WO_DIRECT_MOTOR_CONTROL WO_Direct_Motor_Control;
  62:sdk.c         **** struct WO_DIRECT_INDIVIDUAL_MOTOR_CONTROL WO_Direct_Individual_Motor_Control;
  63:sdk.c         **** struct imuSensor imusensor;
  64:sdk.c         **** 
  65:sdk.c         **** //waypoint example global variables for jeti display
  66:sdk.c         **** unsigned char wpExampleWpNr=0;
  67:sdk.c         **** unsigned char wpExampleActive=0;
  68:sdk.c         **** 
  69:sdk.c         **** //emergency mode variables
  70:sdk.c         **** unsigned char emergencyMode;
  71:sdk.c         **** unsigned char emergencyModeUpdate=0;
  72:sdk.c         **** 
  73:sdk.c         **** #ifdef MATLAB
  74:sdk.c         **** unsigned char xbee_send_flag=0;
  75:sdk.c         **** unsigned char triggerSaveMatlabParams=0; //trigger command to save matlab parameters to flash
  76:sdk.c         **** struct MATLAB_DEBUG matlab_debug;
  77:sdk.c         **** struct MATLAB_UART matlab_uart, matlab_uart_tmp;
  78:sdk.c         **** struct MATLAB_PARAMS matlab_params, matlab_params_tmp;
  79:sdk.c         **** 
  80:sdk.c         **** void SDK_matlabMainLoop(void);
  81:sdk.c         **** #endif
  82:sdk.c         **** void SDK_EXAMPLE_direct_individual_motor_commands(void);
  83:sdk.c         **** void SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping(void);
  84:sdk.c         **** void SDK_EXAMPLE_attitude_commands(void);
  85:sdk.c         **** void SDK_EXAMPLE_gps_waypoint_control(void);
  86:sdk.c         **** int SDK_EXAMPLE_turn_motors_on(void);
  87:sdk.c         **** int SDK_EXAMPLE_turn_motors_off(void);
  88:sdk.c         **** void SDK_Init(void);
  89:sdk.c         **** 
  90:sdk.c         **** 
  91:sdk.c         **** // Start Added by Dan Block
  92:sdk.c         **** unsigned long my_sdkloop_counter = 0;
  93:sdk.c         **** static int timer = 1;
  94:sdk.c         **** int firebit = 1;
  95:sdk.c         **** int UsonicTimer = 0;
  96:sdk.c         **** unsigned int SPI0data = 0;
  97:sdk.c         **** unsigned int SPI0command = 0;
  98:sdk.c         **** int f28027_ready = 0;
  99:sdk.c         **** int UsonicData = 0;
 100:sdk.c         **** int NewUsonicData = 0;
 101:sdk.c         **** int USMaxBot_range1 = 0;
 102:sdk.c         **** 
 103:sdk.c         **** int SwitchTimer = 0;
 104:sdk.c         **** int readSwitchbit = 0;
 105:sdk.c         **** int MagnetSwitch = 0;
 106:sdk.c         **** int NewMagnetSwitch = 0;
 107:sdk.c         **** int GotMagnet = 0;
 108:sdk.c         **** 
 109:sdk.c         **** #define MAX_SPI_SEND_SHORTS  50
 110:sdk.c         **** int SPItxCount = 0;
 111:sdk.c         **** int SPItxSize = 0;
 112:sdk.c         **** unsigned short int SPItxArray[MAX_SPI_SEND_SHORTS];
 113:sdk.c         **** int	SPItxDone = 1;
 114:sdk.c         **** int numMissedTx = 0;
 115:sdk.c         **** 
 116:sdk.c         **** typedef union float2short_tag {
 117:sdk.c         **** 	float fl;
 118:sdk.c         **** 	unsigned short int sh[2];
 119:sdk.c         **** } float2short;
 120:sdk.c         **** 
 121:sdk.c         **** float2short f2s;
 122:sdk.c         **** 
 123:sdk.c         **** int testcount = 0;
 124:sdk.c         **** float testarray[5];
 125:sdk.c         **** 
 126:sdk.c         **** void SPI0Handler(void) __irq
 127:sdk.c         **** {
  16              	@ Function supports interworking.
  17              		@ args = 0, pretend = 0, frame = 0
  18              		@ frame_needed = 0, uses_anonymous_args = 0
  19              		stmfd	sp!, {r4, r5, lr}
  20 0000 30402DE9 	.LCFI0:
  21              		.loc 1 130 0
 128:sdk.c         **** 	IENABLE;
 129:sdk.c         **** 
 130:sdk.c         **** 	IOSET0 = (1<<EXT_NCS); // set CS back high
  22              	r, #-536870912
  23 0004 0EE2A0E3 		add	lr, lr, #163840
  24 0008 0AE98EE2 		mov	r4, #128
  25 000c 8040A0E3 		str	r4, [lr, #4]
  26 0010 04408EE5 		.loc 1 131 0
 131:sdk.c         **** 	if ((S0SPSR&0x80) == 0x80) {
  27              	ip, #-536870912
  28 0014 0EC2A0E3 		add	ip, ip, #131072
  29 0018 02C88CE2 		ldr	r3, [ip, #4]
  30 001c 04309CE5 		tst	r3, #128
  31 0020 800013E3 		.loc 1 132 0
 132:sdk.c         **** 		SPI0data = S0SPDR; // read data
  32              	e	r2, [ip, #8]
  33 0024 08209C15 		ldrne	r3, .L36
  34 0028 30329F15 		strne	r2, [r3, #0]
  35 002c 00208315 		.loc 1 135 0
 133:sdk.c         **** 	}
 134:sdk.c         **** 
 135:sdk.c         **** 	if (SPI0command == 0xCC01) {  // command to tell f28027 to fire ultrasonic sensor
  36              		r2, .L36+4
  37 0030 2C229FE5 		mov	r3, #52224
  38 0034 333BA0E3 		ldr	r2, [r2, #0]
  39 0038 002092E5 		add	r3, r3, #1
  40 003c 013083E2 		cmp	r2, r3
  41 0040 030052E1 		beq	.L30
  42 0044 2400000A 		.loc 1 141 0
 136:sdk.c         **** 		if ((SPI0data == 0xBABE) || (SPI0data == 0xCABB)) {
 137:sdk.c         **** 			firebit = 0;
 138:sdk.c         **** 		} else { // error go back to not ready
 139:sdk.c         **** 			f28027_ready = 0;
 140:sdk.c         **** 		}
 141:sdk.c         **** 	} else if (SPI0command == 0xCC02) {  // command to read date from f28027 ultrasonic reading
  43              	, #52224
  44 0048 333BA0E3 		add	r3, r3, #2
  45 004c 023083E2 		cmp	r2, r3
  46 0050 030052E1 		beq	.L31
  47 0054 2F00000A 		.loc 1 152 0
 142:sdk.c         **** 		//mytest = SPI0data & 0xFF00;
 143:sdk.c         **** 		if ( (SPI0data & 0xFF00) == 0xDD00) {
 144:sdk.c         **** 			UsonicData = SPI0data & 0xFF;
 145:sdk.c         **** 			NewUsonicData = 1;
 146:sdk.c         **** 			firebit = 1;
 147:sdk.c         **** 			UsonicTimer = 0;
 148:sdk.c         **** 		} else {  // error go back to not ready
 149:sdk.c         **** 			f28027_ready = 0;
 150:sdk.c         **** 		}
 151:sdk.c         **** 
 152:sdk.c         **** 	} else if (SPI0command == 0xCC03) {  // command to just check if board attached to SPI
  48              	r3, #52224
  49 0058 333BA0E3 		add	r3, r3, #3
  50 005c 033083E2 		cmp	r2, r3
  51 0060 030052E1 		beq	.L32
  52 0064 3F00000A 		.loc 1 160 0
 153:sdk.c         **** 		if (SPI0data == 0xCABB) {
 154:sdk.c         **** 			f28027_ready = 1;
 155:sdk.c         **** 			firebit = 1;
 156:sdk.c         **** 			readSwitchbit = 1;
 157:sdk.c         **** 			UsonicTimer = 0;
 158:sdk.c         **** 			SwitchTimer = 0;
 159:sdk.c         **** 		}
 160:sdk.c         **** 	} else if (SPI0command == 0xCC04) { // command to beaglebone to store data to SD card
  53              	r3, #52224
  54 0068 333BA0E3 		add	r3, r3, #4
  55 006c 043083E2 		cmp	r2, r3
  56 0070 030052E1 		beq	.L33
  57 0074 5D00000A 		.loc 1 168 0
 161:sdk.c         **** 		if (SPItxCount < SPItxSize) {
 162:sdk.c         **** 			IOCLR0 = (1<<EXT_NCS);
 163:sdk.c         **** 			S0SPDR = SPItxArray[SPItxCount];
 164:sdk.c         **** 			SPItxCount++;
 165:sdk.c         **** 		} else {
 166:sdk.c         **** 			SPItxDone = 1;
 167:sdk.c         **** 		}
 168:sdk.c         **** 	} else if (SPI0command == 0xCC05) {  // command to tell f28027 to transfer magnet switch state
  58              	r3, #52224
  59 0078 333BA0E3 		add	r3, r3, #5
  60 007c 053083E2 		cmp	r2, r3
  61 0080 030052E1 		beq	.L34
  62 0084 4A00000A 		.loc 1 174 0
 169:sdk.c         **** 		if ((SPI0data == 0xBABE) || (SPI0data == 0xCABB)) {
 170:sdk.c         **** 			readSwitchbit = 0;
 171:sdk.c         **** 		} else { // error go back to not ready
 172:sdk.c         **** 			f28027_ready = 0;
 173:sdk.c         **** 		}
 174:sdk.c         **** 	} else if (SPI0command == 0xCC06) {  // command to read magnet switch state
  63              	r3, #52224
  64 0088 333BA0E3 		add	r3, r3, #6
  65 008c 063083E2 		cmp	r2, r3
  66 0090 030052E1 		bne	.L8
  67 0094 0700001A 		.loc 1 175 0
 175:sdk.c         **** 		if ( (SPI0data & 0xFF00) == 0xDD00) {
  68              	r3, .L36
  69 0098 C0319FE5 		ldr	r1, [r3, #0]
  70 009c 001093E5 		and	r2, r1, #65280
  71 00a0 FF2C01E2 		cmp	r2, #56576
  72 00a4 DD0C52E3 		.loc 1 181 0
 176:sdk.c         **** 			MagnetSwitch = SPI0data & 0xFF;
 177:sdk.c         **** 			NewMagnetSwitch = 1;
 178:sdk.c         **** 			readSwitchbit = 1;
 179:sdk.c         **** 			SwitchTimer = 0;
 180:sdk.c         **** 		} else {  // error go back to not ready
 181:sdk.c         **** 			f28027_ready = 0;
  73              	e	r2, #0
  74 00a8 0020A013 		.loc 1 175 0
  75              		beq	.L35
  76 00ac 5F00000A 	.L28:
  77              		.loc 1 181 0
  78              		ldr	r3, .L36+8
  79 00b0 B0319FE5 		str	r2, [r3, #0]
  80 00b4 002083E5 	.L8:
  81              		.loc 1 187 0
 182:sdk.c         **** 		}
 183:sdk.c         **** 
 184:sdk.c         **** 	}
 185:sdk.c         **** 
 186:sdk.c         **** 
 187:sdk.c         **** 	S0SPINT = 0x1;  // clear interrupt
  82              	#-536870912
  83 00b8 0E32A0E3 		add	r3, r3, #131072
  84 00bc 023883E2 		mov	r2, #1
  85 00c0 0120A0E3 		str	r2, [r3, #28]
  86 00c4 1C2083E5 		.loc 1 190 0
 188:sdk.c         **** 
 189:sdk.c         **** 	IDISABLE;
 190:sdk.c         **** 	VICVectAddr = 0;		/* Acknowledge Interrupt */
  87              	r1, #0
  88 00c8 0010A0E3 		mvn	r3, #0
  89 00cc 0030E0E3 		str	r1, [r3, #-4047]
  90 00d0 CF1F03E5 		.loc 1 191 0
 191:sdk.c         **** }
  91              	fd	sp!, {r4, r5, lr}
  92 00d4 3040BDE8 		bx	lr
  93 00d8 1EFF2FE1 	.L30:
  94              		.loc 1 136 0
  95              		ldr	r3, .L36
  96 00dc 7C319FE5 		mov	r2, #47616
  97 00e0 BA2CA0E3 		ldr	r1, [r3, #0]
  98 00e4 001093E5 		mov	r3, #51968
  99 00e8 CB3CA0E3 		sub	r3, r3, #69
 100 00ec 453043E2 		add	r2, r2, #190
 101 00f0 BE2082E2 		cmp	r1, r3
 102 00f4 030051E1 		cmpne	r1, r2
 103 00f8 02005111 		.loc 1 137 0
 104              		ldreq	r3, .L36+12
 105 00fc 68319F05 		.loc 1 136 0
 106              		movne	r2, #0
 107 0100 0020A013 		moveq	r2, #1
 108 0104 0120A003 		.loc 1 137 0
 109              		moveq	r2, #0
 110 0108 0020A003 		streq	r2, [r3, #0]
 111 010c 00208305 		.loc 1 136 0
 112              		beq	.L8
 113 0110 E8FFFF0A 		b	.L28
 114 0114 E5FFFFEA 	.L31:
 115              		.loc 1 143 0
 116              		ldr	r3, .L36
 117 0118 40319FE5 		ldr	r1, [r3, #0]
 118 011c 001093E5 		and	r2, r1, #65280
 119 0120 FF2C01E2 		cmp	r2, #56576
 120 0124 DD0C52E3 		.loc 1 149 0
 121              		ldrne	r3, .L36+8
 122 0128 38319F15 		movne	r2, #0
 123 012c 0020A013 		strne	r2, [r3, #0]
 124 0130 00208315 		.loc 1 143 0
 125              		bne	.L8
 126 0134 DFFFFF1A 		.loc 1 144 0
 127              		ldr	r3, .L36+16
 128 0138 30319FE5 		.loc 1 146 0
 129              		ldr	r2, .L36+12
 130 013c 28219FE5 		.loc 1 144 0
 131              		and	r1, r1, #255
 132 0140 FF1001E2 		.loc 1 145 0
 133              		mov	r0, #1
 134 0144 0100A0E3 		.loc 1 144 0
 135              		str	r1, [r3, #0]
 136 0148 001083E5 		.loc 1 146 0
 137              		str	r0, [r2, #0]
 138 014c 000082E5 		.loc 1 147 0
 139              		ldr	r3, .L36+20
 140 0150 1C319FE5 		.loc 1 145 0
 141              		ldr	r2, .L36+24
 142 0154 1C219FE5 		.loc 1 147 0
 143              		mov	r1, #0
 144 0158 0010A0E3 		str	r1, [r3, #0]
 145 015c 001083E5 		.loc 1 145 0
 146              		str	r0, [r2, #0]
 147 0160 000082E5 		b	.L8
 148 0164 D3FFFFEA 	.L32:
 149              		.loc 1 153 0
 150              		ldr	r3, .L36
 151 0168 F0309FE5 		mov	r2, #51968
 152 016c CB2CA0E3 		ldr	r1, [r3, #0]
 153 0170 001093E5 		sub	r2, r2, #69
 154 0174 452042E2 		cmp	r1, r2
 155 0178 020051E1 		bne	.L8
 156 017c CDFFFF1A 		.loc 1 156 0
 157              		ldr	r3, .L36+28
 158 0180 F4309FE5 		.loc 1 154 0
 159              		mov	r1, #1
 160 0184 0110A0E3 		.loc 1 158 0
 161              		ldr	r2, .L36+32
 162 0188 F0209FE5 		.loc 1 156 0
 163              		str	r1, [r3, #0]
 164 018c 001083E5 		.loc 1 154 0
 165              		ldr	r3, .L36+8
 166 0190 D0309FE5 		.loc 1 157 0
 167              		mov	r0, #0
 168 0194 0000A0E3 		.loc 1 158 0
 169              		str	r0, [r2, #0]
 170 0198 000082E5 		.loc 1 154 0
 171              		str	r1, [r3, #0]
 172 019c 001083E5 		.loc 1 155 0
 173              		ldr	r2, .L36+12
 174 01a0 C4209FE5 		.loc 1 157 0
 175              		ldr	r3, .L36+20
 176 01a4 C8309FE5 		.loc 1 155 0
 177              		str	r1, [r2, #0]
 178 01a8 001082E5 		.loc 1 157 0
 179              		str	r0, [r3, #0]
 180 01ac 000083E5 		b	.L8
 181 01b0 C0FFFFEA 	.L34:
 182              		.loc 1 169 0
 183              		ldr	r3, .L36
 184 01b4 A4309FE5 		mov	r2, #47616
 185 01b8 BA2CA0E3 		ldr	r1, [r3, #0]
 186 01bc 001093E5 		mov	r3, #51968
 187 01c0 CB3CA0E3 		sub	r3, r3, #69
 188 01c4 453043E2 		add	r2, r2, #190
 189 01c8 BE2082E2 		cmp	r1, r3
 190 01cc 030051E1 		cmpne	r1, r2
 191 01d0 02005111 		.loc 1 170 0
 192              		ldreq	r3, .L36+28
 193 01d4 A0309F05 		.loc 1 169 0
 194              		movne	r2, #0
 195 01d8 0020A013 		moveq	r2, #1
 196 01dc 0120A003 		.loc 1 170 0
 197              		moveq	r2, #0
 198 01e0 0020A003 		streq	r2, [r3, #0]
 199 01e4 00208305 		.loc 1 169 0
 200              		beq	.L8
 201 01e8 B2FFFF0A 		b	.L28
 202 01ec AFFFFFEA 	.L33:
 203              		.loc 1 161 0
 204              		ldr	r3, .L36+36
 205 01f0 8C309FE5 		ldr	r5, .L36+40
 206 01f4 8C509FE5 		ldr	r2, [r3, #0]
 207 01f8 002093E5 		ldr	r1, [r5, #0]
 208 01fc 001095E5 		cmp	r1, r2
 209 0200 020051E1 		.loc 1 163 0
 210              		ldrlt	r3, .L36+44
 211 0204 80309FB5 		movlt	r2, r1, asl #1
 212 0208 8120A0B1 		ldrlth	r0, [r2, r3]
 213 020c B30092B1 		.loc 1 166 0
 214              		ldrge	r3, .L36+48
 215 0210 78309FA5 		.loc 1 164 0
 216              		addlt	r1, r1, #1
 217 0214 011081B2 		.loc 1 166 0
 218              		movge	r2, #1
 219 0218 0120A0A3 		.loc 1 162 0
 220              		strlt	r4, [lr, #12]
 221 021c 0C408EB5 		.loc 1 164 0
 222              		strlt	r1, [r5, #0]
 223 0220 001085B5 		.loc 1 163 0
 224              		strlt	r0, [ip, #8]
 225 0224 08008CB5 		.loc 1 166 0
 226              		strge	r2, [r3, #0]
 227 0228 002083A5 		b	.L8
 228 022c A1FFFFEA 	.L35:
 229              		.loc 1 176 0
 230              		ldr	r3, .L36+52
 231 0230 5C309FE5 		.loc 1 178 0
 232              		ldr	r2, .L36+28
 233 0234 40209FE5 		.loc 1 176 0
 234              		and	r1, r1, #255
 235 0238 FF1001E2 		.loc 1 177 0
 236              		mov	r0, #1
 237 023c 0100A0E3 		.loc 1 176 0
 238              		str	r1, [r3, #0]
 239 0240 001083E5 		.loc 1 178 0
 240              		str	r0, [r2, #0]
 241 0244 000082E5 		.loc 1 179 0
 242              		ldr	r3, .L36+32
 243 0248 30309FE5 		.loc 1 177 0
 244              		ldr	r2, .L36+56
 245 024c 44209FE5 		.loc 1 179 0
 246              		mov	r1, #0
 247 0250 0010A0E3 		str	r1, [r3, #0]
 248 0254 001083E5 		.loc 1 177 0
 249              		str	r0, [r2, #0]
 250 0258 000082E5 		b	.L8
 251 025c 95FFFFEA 	.L37:
 252              		.align	2
 253              	.L36:
 254              		.word	SPI0data
 255 0260 00000000 		.word	SPI0command
 256 0264 00000000 		.word	f28027_ready
 257 0268 00000000 		.word	firebit
 258 026c 00000000 		.word	UsonicData
 259 0270 00000000 		.word	UsonicTimer
 260 0274 00000000 		.word	NewUsonicData
 261 0278 00000000 		.word	readSwitchbit
 262 027c 00000000 		.word	SwitchTimer
 263 0280 00000000 		.word	SPItxSize
 264 0284 00000000 		.word	SPItxCount
 265 0288 00000000 		.word	SPItxArray
 266 028c 00000000 		.word	SPItxDone
 267 0290 00000000 		.word	MagnetSwitch
 268 0294 00000000 		.word	NewMagnetSwitch
 269 0298 00000000 	.LFE2:
 271              		.align	2
 272              		.global	SDK_SetEmergencyMode
 274              	SDK_SetEmergencyMode:
 275              	.LFB5:
 276              		.loc 1 413 0
 192:sdk.c         **** // End Dan Block Added
 193:sdk.c         **** 
 194:sdk.c         **** 
 195:sdk.c         **** /*----------------------------------------------------------------------*/
 196:sdk.c         **** /*------------------------- Initialization -----------------------------*/
 197:sdk.c         **** /*----------------------------------------------------------------------*/
 198:sdk.c         **** void SDK_Init(void) { 	// Used in lab.c
 199:sdk.c         **** 	// initialize estimated position and velocity structure
 200:sdk.c         **** 	mocap.dX = 0.0;
 201:sdk.c         **** 	mocap.dY = 0.0;
 202:sdk.c         **** 	mocap.dZ = 0.0;
 203:sdk.c         **** 	mocap.dVx = 0.0;
 204:sdk.c         **** 	mocap.dVy = 0.0;
 205:sdk.c         **** 	mocap.dVz = 0.0;
 206:sdk.c         **** 
 207:sdk.c         **** 	// initialize motion capture structure
 208:sdk.c         **** 	mocap.dT = 0.0;
 209:sdk.c         **** 	mocap.dThetax = 0.0;
 210:sdk.c         **** 	mocap.dThetay = 0.0;
 211:sdk.c         **** 	mocap.dThetaz = 0.0;
 212:sdk.c         **** 	mocap.iFrame = 1;
 213:sdk.c         **** 
 214:sdk.c         **** 	// initialize forces and torques structure
 215:sdk.c         **** 	u.u1 = 0.0;
 216:sdk.c         **** 	u.u2 = 0.0;
 217:sdk.c         **** 	u.u3 = 0.0;
 218:sdk.c         **** 	float mass = 1.9; // kg	
 219:sdk.c         **** 	u.u4 = mass*9.81;
 220:sdk.c         **** 
 221:sdk.c         **** 	// initialize flags
 222:sdk.c         **** 	initialize = 0;
 223:sdk.c         **** 	velocityEstHolder = 0;
 224:sdk.c         **** 
 225:sdk.c         **** 	// low pass filter initializations
 226:sdk.c         **** 	VelEstX = 0.0;
 227:sdk.c         **** 	VelEstY = 0.0;
 228:sdk.c         **** 	VelEstZ = 0.0;
 229:sdk.c         **** 	previousXMeas = 0.0;
 230:sdk.c         **** 	previousYMeas = 0.0;
 231:sdk.c         **** 	previousZMeas = 0.0;
 232:sdk.c         **** 
 233:sdk.c         **** 	// Path Planner Initializations
 234:sdk.c         **** 	goalposyaw.x = 0.0;
 235:sdk.c         **** 	goalposyaw.y = 0.0;
 236:sdk.c         **** 	goalposyaw.z = 0.0;
 237:sdk.c         **** 	goalposyaw.yaw = angle_diff((3.14159 / 180.0) * (((float) RO_ALL_Data.angle_yaw) / 1000.0),0);
 238:sdk.c         **** 
 239:sdk.c         **** 	// Integral of error Initializations
 240:sdk.c         **** 	errorcum[0] = 0.0;
 241:sdk.c         **** 	errorcum[1] = 0.0;
 242:sdk.c         **** 	errorcum[2] = 0.0;
 243:sdk.c         **** 	IntegralHolder = 0;
 244:sdk.c         **** 
 245:sdk.c         **** 	takeoff2 = 0;
 246:sdk.c         **** 
 247:sdk.c         **** 	// Start Dan Block Added
 248:sdk.c         **** //	ultrasound_timer = 0;
 249:sdk.c         **** //	ultrasound_z = 0;
 250:sdk.c         **** //	ultrasound_vz = 0;
 251:sdk.c         **** //	ultrasound_z_prev = 0;
 252:sdk.c         **** //	ultrasound_z_error_sum = 0;
 253:sdk.c         **** 
 254:sdk.c         **** 	my_sdkloop_counter = 0;
 255:sdk.c         **** // End Dan Block Added
 256:sdk.c         **** }
 257:sdk.c         **** /*----------------------------------------------------------------------*/
 258:sdk.c         **** /*----------------------- End Initialization ---------------------------*/
 259:sdk.c         **** /*----------------------------------------------------------------------*/
 260:sdk.c         **** 
 261:sdk.c         **** 
 262:sdk.c         **** 
 263:sdk.c         **** void SDK_mainloop(void)
 264:sdk.c         **** {
 265:sdk.c         **** //#ifdef MATLAB
 266:sdk.c         **** 	//SDK_matlabMainLoop(); //this runs only in combination with the AscTec Simulink Toolkit
 267:sdk.c         **** 
 268:sdk.c         **** 	//jeti telemetry can always be activated. You may deactivate this call if you don't have the AscTe
 269:sdk.c         **** 	//SDK_jetiAscTecExampleRun();
 270:sdk.c         **** 
 271:sdk.c         **** //#else //write your own C-cod e within this function
 272:sdk.c         **** 
 273:sdk.c         **** 	imusensor.dT = (float) RO_ALL_Data.flight_time;
 274:sdk.c         **** 	imusensor.dThetax = (3.14159/180.0)*(((float) RO_ALL_Data.angle_roll) / 1000.0);
 275:sdk.c         **** 	imusensor.dThetay = (3.14159/180.0)*(((float) RO_ALL_Data.angle_pitch) / 1000.0);
 276:sdk.c         **** 	imusensor.dThetaz = angle_diff((3.14159 / 180.0) * (((float) RO_ALL_Data.angle_yaw) / 1000.0),0);
 277:sdk.c         **** 	imusensor.dOmegax = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_roll;
 278:sdk.c         **** 	imusensor.dOmegay = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_nick;
 279:sdk.c         **** 	imusensor.dOmegaz = (3.1415 / 180.0) * 0.0154 * (float) IMU_CalcData.angvel_yaw;
 280:sdk.c         **** 
 281:sdk.c         **** 	if (takeoff2 == 0) {
 282:sdk.c         **** 		if (mocap.dZ < -0.5) {
 283:sdk.c         **** 			takeoff2 = 1;
 284:sdk.c         **** 		}
 285:sdk.c         **** 	}
 286:sdk.c         **** 
 287:sdk.c         **** // Added By Dan Block
 288:sdk.c         **** 	if (NewUsonicData == 1) {
 289:sdk.c         **** 		USMaxBot_range1 = UsonicData;
 290:sdk.c         **** 		//filter_ultrasound_z();
 291:sdk.c         **** 		NewUsonicData = 0;
 292:sdk.c         **** 	}
 293:sdk.c         **** 	if (NewMagnetSwitch == 1) {
 294:sdk.c         **** 		GotMagnet = ~MagnetSwitch & 0x1;
 295:sdk.c         **** 		NewMagnetSwitch = 0;
 296:sdk.c         **** 	}
 297:sdk.c         **** // End Add
 298:sdk.c         **** 
 299:sdk.c         **** 	lab();
 300:sdk.c         **** 
 301:sdk.c         **** //	 Add by Dan Block
 302:sdk.c         **** //	 Code to read magnet switch from attached 28027 board
 303:sdk.c         **** //	if (timer > SWITCH_INIT_DELAY) { //wait SWITCH_INIT_DELAY ms before talking to 28027
 304:sdk.c         **** //		if (f28027_ready == 1) {
 305:sdk.c         **** //			SwitchTimer++;
 306:sdk.c         **** //			if (readSwitchbit == 1) {
 307:sdk.c         **** //				if (SwitchTimer == 25) {  // read every 25 ms
 308:sdk.c         **** //					IOCLR0 = (1<<EXT_NCS);
 309:sdk.c         **** //					SPI0command = 0xCC05;
 310:sdk.c         **** //					S0SPDR = SPI0command;  // send Sample Switch Command
 311:sdk.c         **** //				}
 312:sdk.c         **** //			} else if (SwitchTimer == 26) {
 313:sdk.c         **** //				IOCLR0 = (1<<EXT_NCS);
 314:sdk.c         **** //				SPI0command = 0xCC06;
 315:sdk.c         **** //				S0SPDR = SPI0command;  // send transfer Switch State Command
 316:sdk.c         **** //			}
 317:sdk.c         **** //		} else {
 318:sdk.c         **** //			IOCLR0 = (1<<EXT_NCS);
 319:sdk.c         **** //			SPI0command = 0xCC03;
 320:sdk.c         **** //			S0SPDR = SPI0command;  // send Are you Alive command
 321:sdk.c         **** //		}
 322:sdk.c         **** //	}
 323:sdk.c         **** 
 324:sdk.c         **** // This code was communicating with BBB
 325:sdk.c         **** //	if (timer > SDCARD_START_DELAY) {
 326:sdk.c         **** //		if(0==(timer%500)) {
 327:sdk.c         **** //			if (SPItxDone == 1) {
 328:sdk.c         **** //				SPItxDone = 0;
 329:sdk.c         **** //				testarray[0] = (float)(testcount);
 330:sdk.c         **** //				testarray[1] = (float)(5*testcount + 1);
 331:sdk.c         **** //				testarray[2] = (float)(5*testcount + 2);
 332:sdk.c         **** //				testarray[3] = (float)(5*testcount + 3);
 333:sdk.c         **** //				testarray[4] = (float)(5*testcount + 4);
 334:sdk.c         **** //				testcount++;
 335:sdk.c         **** //				for (i=0;i<5;i++) {
 336:sdk.c         **** //					f2s.fl = testarray[i];
 337:sdk.c         **** //					SPItxArray[2*i] = f2s.sh[0];
 338:sdk.c         **** //					SPItxArray[2*i + 1] = f2s.sh[1];
 339:sdk.c         **** //				}
 340:sdk.c         **** //				SPItxCount = 0;
 341:sdk.c         **** //				SPItxSize = 10;
 342:sdk.c         **** //
 343:sdk.c         **** //				IOCLR0 = (1<<EXT_NCS);
 344:sdk.c         **** //				SPI0command = 0xCC04;
 345:sdk.c         **** //				S0SPDR = SPI0command;  // send Command to beaglebone to store floats to SDCard
 346:sdk.c         **** //			} else {
 347:sdk.c         **** //				numMissedTx++;
 348:sdk.c         **** //			}
 349:sdk.c         **** //		}
 350:sdk.c         **** //	}
 351:sdk.c         **** 
 352:sdk.c         **** 
 353:sdk.c         **** 	// Code for reading Ultrasonic sensor if 28027 board attached
 354:sdk.c         **** 	if (timer > USONIC_INIT_DELAY) { //wait USONIC_INIT_DELAY ms before talking to 28027
 355:sdk.c         **** 		if (f28027_ready == 1) {
 356:sdk.c         **** 			UsonicTimer++;
 357:sdk.c         **** 			if (firebit == 1) {
 358:sdk.c         **** 				if (UsonicTimer == 5) {
 359:sdk.c         **** 					IOCLR0 = (1<<EXT_NCS);
 360:sdk.c         **** 					SPI0command = 0xCC01;
 361:sdk.c         **** 					S0SPDR = SPI0command;  // send Start Measurement Usonic Command
 362:sdk.c         **** 				}
 363:sdk.c         **** 			} else if (UsonicTimer == 75) {
 364:sdk.c         **** 				IOCLR0 = (1<<EXT_NCS);
 365:sdk.c         **** 				SPI0command = 0xCC02;
 366:sdk.c         **** 				S0SPDR = SPI0command;  // send Read Measurement Usonic Command
 367:sdk.c         **** 			}
 368:sdk.c         **** 		} else {
 369:sdk.c         **** 			IOCLR0 = (1<<EXT_NCS);
 370:sdk.c         **** 			SPI0command = 0xCC03;
 371:sdk.c         **** 			S0SPDR = SPI0command;  // send Are you Alive command
 372:sdk.c         **** 		}
 373:sdk.c         **** 	}
 374:sdk.c         **** 
 375:sdk.c         **** 	timer++;
 376:sdk.c         **** 
 377:sdk.c         **** 	my_sdkloop_counter++;
 378:sdk.c         **** 
 379:sdk.c         **** // End Add by Dan Block
 380:sdk.c         **** 
 381:sdk.c         **** 	//SDK_jetiAscTecExampleRun();
 382:sdk.c         **** 
 383:sdk.c         **** 	//if (wpExampleActive) //this is used to activate the waypoint example via the jeti telemetry disp
 384:sdk.c         **** 	//	SDK_EXAMPLE_gps_waypoint_control();
 385:sdk.c         **** 
 386:sdk.c         **** //#endif
 387:sdk.c         **** }
 388:sdk.c         **** 
 389:sdk.c         **** // Dan Block Add
 390:sdk.c         **** //void filter_ultrasound_z(void) {
 391:sdk.c         **** //	// take finite difference to estimate z velocity
 392:sdk.c         **** //	float dt = ((float)(my_sdkloop_counter - ultrasound_timer))/1000.0;
 393:sdk.c         **** //    float alpha = 0.95;
 394:sdk.c         **** //	ultrasound_z = (float)UsonicData/100.0;
 395:sdk.c         **** //	if (ultrasound_z_prev > 0.0) {
 396:sdk.c         **** //        ultrasound_z = alpha * ultrasound_z + (1-alpha)* ultrasound_z_prev;
 397:sdk.c         **** //		ultrasound_vz = (ultrasound_z - ultrasound_z_prev)/dt;
 398:sdk.c         **** //	}
 399:sdk.c         **** //
 400:sdk.c         **** //	g_state.dZ = ultrasound_z;
 401:sdk.c         **** //	g_state.dVz = ultrasound_vz;
 402:sdk.c         **** //
 403:sdk.c         **** //	ultrasound_z_prev = ultrasound_z;
 404:sdk.c         **** //	ultrasound_timer = my_sdkloop_counter;
 405:sdk.c         **** //}
 406:sdk.c         **** // End Dan Block Add
 407:sdk.c         **** 
 408:sdk.c         **** /*
 409:sdk.c         ****  *
 410:sdk.c         ****  * Sets emergency mode on LowLevel processor. Select one of the EM_ defines as mode option. See EM_
 411:sdk.c         ****  */
 412:sdk.c         **** 
 413:sdk.c         **** void SDK_SetEmergencyMode(unsigned char mode) {
 277              	 0
 278              		sub	r3, r0, #1
 279              		cmp	r0, #8
 280              		cmpne	r3, #1
 281              		.loc 1 413 0
 282              		@ lr needed for prologue
 283 029c FF0000E2 		.loc 1 414 0
 414:sdk.c         **** 	if ((mode != EM_SAVE_EXTENDED_WAITING_TIME) && (mode != EM_SAVE) && (mode
 284              	39
 285 02a0 013040E2 		cmp	r0, #4
 286 02a4 080050E3 		bxne	lr
 287 02a8 01005313 	.L39:
 288              		.loc 1 418 0
 289              		ldr	r3, .L43
 290              		strb	r0, [r3, #0]
 291 02ac 0100009A 		.loc 1 419 0
 292 02b0 040050E3 		ldr	r3, .L43+4
 293 02b4 1EFF2F11 		mov	r2, #1
 294              		strb	r2, [r3, #0]
 415:sdk.c         **** 			!= EM_RETURN_AT_MISSION_SUMMIT) && (mode
 416:sdk.c         **** 			!= EM_RETURN_AT_PREDEFINED_HEIGHT))
 417:sdk.c         **** 		return;
 418:sdk.c         **** 	emergencyMode = mode;
 295              	:
 296 02b8 10309FE5 		.align	2
 297 02bc 0000C3E5 	.L43:
 419:sdk.c         **** 	emergencyModeUpdate = 1;
 298              	ord	emergencyMode
 299 02c0 0C309FE5 		.word	emergencyModeUpdate
 300 02c4 0120A0E3 	.LFE5:
 302 02cc 1EFF2FE1 		.align	2
 303              		.global	SDK_EXAMPLE_direct_individual_motor_commands
 305              	SDK_EXAMPLE_direct_individual_motor_commands:
 306 02d0 00000000 	.LFB6:
 307 02d4 00000000 		.loc 1 426 0
 308              		@ Function supports interworking.
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312              		.loc 1 441 0
 313              		ldr	r0, .L59
 314              		ldr	r2, .L59+4
 420:sdk.c         **** }
 421:sdk.c         **** 
 422:sdk.c         **** /*
 423:sdk.c         ****  * the following example shows the direct motor command usage by mapping the stick directly to the 
 424:sdk.c         ****  */
 425:sdk.c         **** void SDK_EXAMPLE_direct_individual_motor_commands(void)
 426:sdk.c         **** {
 315              	6]
 316              		umull	ip, r1, r2, r3
 317              		rsb	r3, r1, r3
 318              		.loc 1 448 0
 319              		ldrh	ip, [r0, #24]
 427:sdk.c         **** 
 428:sdk.c         **** 	WO_SDK.ctrl_mode=0x00;	//0x00: direct individual motor control: individual commands for motors 0..
 429:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 430:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 431:sdk.c         **** 							//0x03: GPS waypoint control
 432:sdk.c         **** 
 433:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 434:sdk.c         **** 							//1: enable control by HL processor
 435:sdk.c         **** 
 436:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0;
 437:sdk.c         **** 
 438:sdk.c         **** 	unsigned int i;
 439:sdk.c         **** 
 440:sdk.c         **** 	//scale throttle stick to [0..200] and map it to all motors
 441:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[0]=RO_ALL_Data.channel[2]/21;
 320              	 1 441 0
 321 02d8 B0009FE5 		add	r1, r1, r3, lsr #1
 322 02dc B0209FE5 		.loc 1 448 0
 323 02e0 B031D0E1 		mov	r3, #2496
 324 02e4 92C381E0 		.loc 1 441 0
 325 02e8 033061E0 		ldr	r0, .L59+8
 442:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[1]=RO_ALL_Data.channel[2]/21;
 443:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[2]=RO_ALL_Data.channel[2]/21;
 444:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[3]=RO_ALL_Data.channel[2]/21;
 445:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[4]=RO_ALL_Data.channel[2]/21;
 446:sdk.c         **** 	WO_Direct_Individual_Motor_Control.motor[5]=RO_ALL_Data.channel[2]/21;
 447:sdk.c         **** 
 448:sdk.c         **** 	if (RO_ALL_Data.channel[6]>2500)
 326              	1 428 0
 327 02ec B8C1D0E1 		ldr	r2, .L59+12
 328              		.loc 1 448 0
 329 02f0 A31081E0 		add	r3, r3, #4
 330              		.loc 1 441 0
 331 02f4 273DA0E3 		mov	r1, r1, lsr #4
 332              		and	r1, r1, #255
 333 02f8 98009FE5 		.loc 1 448 0
 334              		cmp	ip, r3
 335 02fc 98209FE5 		.loc 1 428 0
 336              		mov	r3, #0
 337 0300 043083E2 		.loc 1 433 0
 338              		mov	ip, #1
 339 0304 2112A0E1 		.loc 1 426 0
 340 0308 FF1001E2 		@ lr needed for prologue
 341              		.loc 1 436 0
 342 030c 03005CE1 		strb	r3, [r2, #2]
 343              		.loc 1 446 0
 344 0310 0030A0E3 		strb	r1, [r0, #5]
 345              		.loc 1 428 0
 346 0314 01C0A0E3 		strb	r3, [r2, #0]
 347              		.loc 1 433 0
 348              		strb	ip, [r2, #1]
 349              		.loc 1 441 0
 350 0318 0230C2E5 		strb	r1, [r0, #0]
 351              		.loc 1 442 0
 352 031c 0510C0E5 		strb	r1, [r0, #1]
 353              		.loc 1 443 0
 354 0320 0030C2E5 		strb	r1, [r0, #2]
 355              		.loc 1 444 0
 356 0324 01C0C2E5 		strb	r1, [r0, #3]
 357              		.loc 1 445 0
 358 0328 0010C0E5 		strb	r1, [r0, #4]
 359              		.loc 1 455 0
 360 032c 0110C0E5 		strlsb	r3, [r0, #8]
 361              		.loc 1 448 0
 362 0330 0210C0E5 		bls	.L48
 363              		.loc 1 452 0
 364 0334 0310C0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 365              		cmp	r3, #80
 366 0338 0410C0E5 		.loc 1 453 0
 449:sdk.c         **** 	{
 450:sdk.c         **** 		WO_Direct_Individual_Motor_Control.motorReverseMask=0x01; //invert motor 0 if AUX switch is enabl
 451:sdk.c         **** 		//limit inverted speed (IMPORTANT! THIS IS NOT DONE AUTOMATICALLY!)
 452:sdk.c         **** 		if (WO_Direct_Individual_Motor_Control.motor[0]>80)
 453:sdk.c         **** 			WO_Direct_Individual_Motor_Control.motor[0]=80;
 454:sdk.c         **** 	}else
 455:sdk.c         **** 		WO_Direct_Individual_Motor_Control.motorReverseMask=0x00;
 367              	0, #8]
 368 033c 0830C095 		.loc 1 453 0
 369              		strhib	r3, [r0, #0]
 370 0340 0400009A 	.L48:
 371              		.loc 1 455 0
 372 0344 0030D0E5 		ldr	r2, .L59+8
 373 0348 500053E3 		mov	r0, #1
 374              		add	r1, r2, #6
 375 034c 5030A083 		mvn	ip, #55
 376              	.L50:
 377 0350 08C0C0E5 		.loc 1 462 0
 378              		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 379 0354 0030C085 		cmp	r3, #0
 380              		streqb	r0, [r2, #0]
 381              		beq	.L53
 382 0358 38209FE5 		.loc 1 463 0
 383 035c 0100A0E3 		cmp	r3, #200
 384 0360 061082E2 		strhib	ip, [r2, #0]
 385 0364 37C0E0E3 	.L53:
 386              		add	r2, r2, #1
 456:sdk.c         **** 
 457:sdk.c         **** 
 458:sdk.c         **** 	//make sure commands are never 0 so that motors will always keep spinning
 459:sdk.c         ****     //also make sure that commands stay within range
 460:sdk.c         ****     for(i=0;i<6;i++)
 461:sdk.c         ****     {
 462:sdk.c         ****     	if(!WO_Direct_Individual_Motor_Control.motor[i]) WO_Direct_Individual_Motor_Control.motor[i]=1
 387              	2, r1
 388 0368 0030D2E5 		bne	.L50
 389 036c 000053E3 		.loc 1 465 0
 390 0370 0000C205 		bx	lr
 391 0374 0100000A 	.L60:
 463:sdk.c         ****     	else if (WO_Direct_Individual_Motor_Control.motor[i]>200) WO_Direct_Individual_Motor_Control.m
 392              	gn	2
 393 0378 C80053E3 	.L59:
 394 037c 00C0C285 		.word	RO_ALL_Data
 395              		.word	-2045222521
 396 0380 012082E2 		.word	WO_Direct_Individual_Motor_Control
 397              		.word	WO_SDK
 398 0384 010052E1 	.LFE6:
 464:sdk.c         ****     }
 465:sdk.c         **** }
 400              	2
 401 038c 1EFF2FE1 		.global	SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping
 403              	SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping:
 404              	.LFB7:
 405 0390 00000000 		.loc 1 469 0
 406 0394 87611886 		@ Function supports interworking.
 407 0398 00000000 		@ args = 0, pretend = 0, frame = 0
 408 039c 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 409              		.loc 1 482 0
 410              		ldr	r3, .L63
 411              		.loc 1 469 0
 412              		stmfd	sp!, {r4, r5, r6, r7, lr}
 413              	.LCFI1:
 414              		.loc 1 484 0
 415              		ldrh	ip, [r3, #16]
 466:sdk.c         **** 
 467:sdk.c         **** 
 468:sdk.c         **** void SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping(void)
 469:sdk.c         **** {
 416              	dr	r4, .L63+4
 417              		ldrh	r0, [r3, #14]
 418              		.loc 1 482 0
 419              		ldrh	r6, [r3, #12]
 470:sdk.c         **** 	WO_SDK.ctrl_mode=0x01;	//0x00: direct individual motor control: individual commands for motors 0..
 471:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 472:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 473:sdk.c         **** 							//0x03: GPS waypoint control
 474:sdk.c         **** 
 475:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 476:sdk.c         **** 							//1: enable control by HL processor
 477:sdk.c         **** 
 478:sdk.c         **** 	/*
 479:sdk.c         **** 	 *  Stick commands directly mapped to motors, NO attitude control! Do NOT try to fly!
 480:sdk.c         **** 	 * */
 481:sdk.c         **** 
 482:sdk.c         **** 	WO_Direct_Motor_Control.pitch=(4095-RO_ALL_Data.channel[0])/21;
 420              	c 1 485 0
 421 03a0 94309FE5 		ldrh	r1, [r3, #18]
 422              		.loc 1 482 0
 423 03a4 F0402DE9 		mov	r2, #4080
 424              		.loc 1 484 0
 483:sdk.c         **** 	WO_Direct_Motor_Control.roll=RO_ALL_Data.channel[1]/21;
 484:sdk.c         **** 	WO_Direct_Motor_Control.thrust=RO_ALL_Data.channel[2]/21;
 425              	l	r3, r5, r4, ip
 426 03a8 B0C1D3E1 		.loc 1 482 0
 427              		mov	r3, #817889280
 428 03ac 8C409FE5 		.loc 1 483 0
 429 03b0 BE00D3E1 		umull	r7, lr, r4, r0
 430              		.loc 1 482 0
 431 03b4 BC60D3E1 		add	r2, r2, #15
 485:sdk.c         **** 	WO_Direct_Motor_Control.yaw=(4095-RO_ALL_Data.channel[3])/21;
 432              	, r3, #199680
 433 03b8 B211D3E1 		.loc 1 485 0
 434              		rsb	r1, r1, r2
 435 03bc FF2EA0E3 		.loc 1 482 0
 436              		add	r3, r3, #49
 437 03c0 943C85E0 		rsb	r2, r6, r2
 438              		.loc 1 485 0
 439 03c4 C335A0E3 		smull	r4, r6, r3, r1
 440              		.loc 1 482 0
 441 03c8 94708EE0 		smull	r7, r4, r3, r2
 442              		.loc 1 483 0
 443 03cc 0F2082E2 		rsb	r0, lr, r0
 444 03d0 C33B83E2 		.loc 1 484 0
 445              		rsb	ip, r5, ip
 446 03d4 021061E0 		.loc 1 482 0
 447              		ldr	r3, .L63+8
 448 03d8 313083E2 		.loc 1 483 0
 449 03dc 022066E0 		add	lr, lr, r0, lsr #1
 450              		.loc 1 484 0
 451 03e0 9341C6E0 		add	r5, r5, ip, lsr #1
 452              		.loc 1 482 0
 453 03e4 9372C4E0 		mov	r2, r2, asr #31
 454              		.loc 1 470 0
 455 03e8 00006EE0 		ldr	ip, .L63+12
 456              		.loc 1 485 0
 457 03ec 0CC065E0 		mov	r1, r1, asr #31
 458              		.loc 1 470 0
 459 03f0 4C309FE5 		mov	r0, #1
 460              		.loc 1 482 0
 461 03f4 A0E08EE0 		rsb	r2, r2, r4, asr #2
 462              		.loc 1 485 0
 463 03f8 AC5085E0 		rsb	r1, r1, r6, asr #2
 464              		.loc 1 483 0
 465 03fc C22FA0E1 		mov	lr, lr, lsr #4
 466              		.loc 1 484 0
 467 0400 40C09FE5 		mov	r5, r5, lsr #4
 468              		.loc 1 475 0
 469 0404 C11FA0E1 		strb	r0, [ip, #1]
 470              		.loc 1 485 0
 471 0408 0100A0E3 		strb	r1, [r3, #2]
 472              		.loc 1 482 0
 473 040c 442162E0 		strb	r2, [r3, #0]
 474              		.loc 1 483 0
 475 0410 461161E0 		strb	lr, [r3, #1]
 476              		.loc 1 484 0
 477 0414 2EE2A0E1 		strb	r5, [r3, #3]
 478              		.loc 1 470 0
 479 0418 2552A0E1 		strb	r0, [ip, #0]
 480              		.loc 1 487 0
 481 041c 0100CCE5 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 482              		bx	lr
 483 0420 0210C3E5 	.L64:
 484              		.align	2
 485 0424 0020C3E5 	.L63:
 486              		.word	RO_ALL_Data
 487 0428 01E0C3E5 		.word	-2045222521
 488              		.word	WO_Direct_Motor_Control
 489 042c 0350C3E5 		.word	WO_SDK
 490              	.LFE7:
 486:sdk.c         **** 
 487:sdk.c         **** }
 492              	EXAMPLE_attitude_commands, %function
 493 0434 F040BDE8 	SDK_EXAMPLE_attitude_commands:
 494 0438 1EFF2FE1 	.LFB8:
 495              		.loc 1 491 0
 496              		@ Function supports interworking.
 497              		@ args = 0, pretend = 0, frame = 0
 498 043c 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 499 0440 87611886 		@ link register save eliminated.
 500 0444 00000000 		.loc 1 492 0
 501 0448 00000000 		ldr	r1, .L67
 502              		.loc 1 501 0
 503              		ldr	r0, .L67+4
 504              		.loc 1 497 0
 505              		mov	r3, #1
 506              		strb	r3, [r1, #1]
 507              		.loc 1 504 0
 508              		mov	r3, #400	@ movhi
 488:sdk.c         **** 
 489:sdk.c         **** 
 490:sdk.c         **** void SDK_EXAMPLE_attitude_commands(void)
 491:sdk.c         **** {
 509              	v	r2, #2
 510              		.loc 1 504 0
 511              		strh	r3, [r0, #6]	@ movhi
 512              		.loc 1 501 0
 513              		mov	r3, #8	@ movhi
 492:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 514              	 1 491 0
 515 044c 24109FE5 		@ lr needed for prologue
 493:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 494:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 495:sdk.c         **** 							//0x03: GPS waypoint control
 496:sdk.c         **** 
 497:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 498:sdk.c         **** 							//1: enable control by HL processor
 499:sdk.c         **** 
 500:sdk.c         **** 	//with this example the UAV will go to ~10% throttle when SDK control is activated
 501:sdk.c         **** 	WO_CTRL_Input.ctrl=0x08;	//0x08: enable throttle control by HL. Height control and GPS are deactiv
 516              	loc 1 492 0
 517 0450 24009FE5 		strb	r2, [r1, #0]
 518              		.loc 1 501 0
 519 0454 0130A0E3 		strh	r3, [r0, #8]	@ movhi
 520 0458 0130C1E5 		.loc 1 507 0
 502:sdk.c         **** 								//pitch, roll and yaw are still commanded via the remote control
 503:sdk.c         **** 
 504:sdk.c         **** 	WO_CTRL_Input.thrust=400;	//10% throttle command
 521              	r
 522 045c 193EA0E3 	.L68:
 523              		.align	2
 524 0460 0220A0E3 	.L67:
 525              		.word	WO_SDK
 526 0464 B630C0E1 		.word	WO_CTRL_Input
 527              	.LFE8:
 529              		.align	2
 530              		.global	SDK_EXAMPLE_turn_motors_on
 532 046c 0020C1E5 	SDK_EXAMPLE_turn_motors_on:
 533              	.LFB10:
 534 0470 B830C0E1 		.loc 1 788 0
 505:sdk.c         **** 
 506:sdk.c         **** 
 507:sdk.c         **** }
 535              	pports interworking.
 536 0474 1EFF2FE1 		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		.loc 1 801 0
 539              		ldr	r0, .L76
 540 0478 00000000 		ldr	r3, [r0, #0]
 541 047c 00000000 		.loc 1 791 0
 542              		ldr	r2, .L76+4
 543              		.loc 1 801 0
 544              		add	ip, r3, #1
 545              		.loc 1 788 0
 546              		stmfd	sp!, {r4, lr}
 547              	.LCFI2:
 548              		.loc 1 796 0
 508:sdk.c         **** 
 509:sdk.c         **** 
 510:sdk.c         **** 
 511:sdk.c         **** /* This function demonstrates a simple waypoint command generation. The switch on Channel 7 is used
 512:sdk.c         ****  * to activate a 15m by 15m square. Therefore a waypoint is calculated from the current position an
 513:sdk.c         ****  * height and is transmitted to the low level processor. The waypoint status is monitored to switch
 514:sdk.c         ****  * the next waypoint after the current one is reached.
 515:sdk.c         ****  *
 516:sdk.c         ****  * wpCtrlWpCmd is used to send a command to the low level processor. Different options like waypoin
 517:sdk.c         ****  * are available. See LL_HL_comm.h for WP_CMD_* defines
 518:sdk.c         ****  *
 519:sdk.c         ****  * wpCtrlWpCmdUpdated has to be set to 1 to send the command. When the cmd is sent it is set back t
 520:sdk.c         ****  *
 521:sdk.c         ****  * wpCtrlAckTrigger is set to 1 when the LL accepts the waypoint
 522:sdk.c         ****  *
 523:sdk.c         ****  * wpCtrlNavStatus gives you a navigation status. See WP_NAVSTAT_* defines in SDK.h for options
 524:sdk.c         ****  *
 525:sdk.c         ****  * wpCtrlDistToWp gives you the current distance to the current waypoint in dm (= 10 cm)
 526:sdk.c         ****  */
 527:sdk.c         **** void SDK_EXAMPLE_gps_waypoint_control()
 528:sdk.c         **** {
 529:sdk.c         **** 	static unsigned char wpExampleState=0;
 530:sdk.c         **** 	static double originLat,originLon;
 531:sdk.c         **** 
 532:sdk.c         **** 
 533:sdk.c         **** 	WO_SDK.ctrl_mode=0x03;
 534:sdk.c         **** 
 535:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 536:sdk.c         **** 							//1: enable control by HL processor
 537:sdk.c         **** 
 538:sdk.c         **** 	switch (wpExampleState)
 539:sdk.c         **** 	{
 540:sdk.c         **** 		//prior to start, the lever on channel 7 has to be in "OFF" position
 541:sdk.c         **** 		case 0:
 542:sdk.c         **** 		if ((RO_ALL_Data.channel[6]<1600) || (wpExampleActive))
 543:sdk.c         **** 			wpExampleState=1;
 544:sdk.c         **** 		break;
 545:sdk.c         **** 
 546:sdk.c         **** 		case 1:
 547:sdk.c         **** 		if ((RO_ALL_Data.channel[6]>2400) || (wpExampleActive))
 548:sdk.c         **** 		{
 549:sdk.c         **** 			double lat,lon;
 550:sdk.c         **** 			//lever was set to "ON" state -> calculate and send first waypoint and switch state
 551:sdk.c         **** 
 552:sdk.c         **** 			//fill waypoint structure
 553:sdk.c         **** 			wpToLL.max_speed=100;
 554:sdk.c         **** 			wpToLL.pos_acc=3000; 	//3m accuracy
 555:sdk.c         **** 			wpToLL.time=400; 		//4 seconds waiting time at each waypoint
 556:sdk.c         **** 			wpToLL.wp_activated=1;
 557:sdk.c         **** 
 558:sdk.c         **** 			//see LL_HL_comm.h for WPPROP defines
 559:sdk.c         **** 			wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED;
 560:sdk.c         **** 
 561:sdk.c         **** 			//use current height and yaw
 562:sdk.c         **** 			wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 563:sdk.c         **** 			wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 564:sdk.c         **** 
 565:sdk.c         **** 			originLat=(double)GPS_Data.latitude/10000000.0;
 566:sdk.c         **** 			originLon=(double)GPS_Data.longitude/10000000.0;
 567:sdk.c         **** 
 568:sdk.c         **** 			//calculate a position 15m north of us
 569:sdk.c         **** 			xy2latlon(originLat,originLon,0.0,15.0,&lat,&lon);
 570:sdk.c         **** 
 571:sdk.c         **** 			wpToLL.X=lon*10000000;
 572:sdk.c         **** 			wpToLL.Y=lat*10000000;
 573:sdk.c         **** 
 574:sdk.c         **** 			//calc chksum
 575:sdk.c         **** 			wpToLL.chksum = 0xAAAA
 576:sdk.c         **** 									+ wpToLL.yaw
 577:sdk.c         **** 									+ wpToLL.height
 578:sdk.c         **** 									+ wpToLL.time
 579:sdk.c         **** 									+ wpToLL.X
 580:sdk.c         **** 									+ wpToLL.Y
 581:sdk.c         **** 									+ wpToLL.max_speed
 582:sdk.c         **** 									+ wpToLL.pos_acc
 583:sdk.c         **** 									+ wpToLL.properties
 584:sdk.c         **** 									+ wpToLL.wp_activated;
 585:sdk.c         **** 
 586:sdk.c         **** 			//send waypoint
 587:sdk.c         **** 			wpCtrlAckTrigger=0;
 588:sdk.c         **** 			wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 589:sdk.c         **** 			wpCtrlWpCmdUpdated=1;
 590:sdk.c         **** 			wpExampleWpNr=0;
 591:sdk.c         **** 			wpExampleState=2;
 592:sdk.c         **** 
 593:sdk.c         **** 		}
 594:sdk.c         **** 		break;
 595:sdk.c         **** 
 596:sdk.c         **** 		case 2:
 597:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 598:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 599:sdk.c         **** 			{
 600:sdk.c         **** 				//check if waypoint was reached and wait time is over
 601:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 602:sdk.c         **** 				{
 603:sdk.c         **** 					//new waypoint
 604:sdk.c         **** 					double lat,lon;
 605:sdk.c         **** 
 606:sdk.c         **** 					//fill waypoint structure
 607:sdk.c         **** 					wpToLL.max_speed=100;
 608:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 609:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 610:sdk.c         **** 					wpToLL.wp_activated=1;
 611:sdk.c         **** 
 612:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 613:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 614:sdk.c         **** 
 615:sdk.c         **** 					//use current height and yaw
 616:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 617:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 618:sdk.c         **** 
 619:sdk.c         **** 					//calculate a position 15m north and 15m east of origin
 620:sdk.c         **** 					xy2latlon(originLat,originLon,15.0,15.0,&lat,&lon);
 621:sdk.c         **** 
 622:sdk.c         **** 					wpToLL.X=lon*10000000;
 623:sdk.c         **** 					wpToLL.Y=lat*10000000;
 624:sdk.c         **** 
 625:sdk.c         **** 					//calc chksum
 626:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 627:sdk.c         **** 											+ wpToLL.yaw
 628:sdk.c         **** 											+ wpToLL.height
 629:sdk.c         **** 											+ wpToLL.time
 630:sdk.c         **** 											+ wpToLL.X
 631:sdk.c         **** 											+ wpToLL.Y
 632:sdk.c         **** 											+ wpToLL.max_speed
 633:sdk.c         **** 											+ wpToLL.pos_acc
 634:sdk.c         **** 											+ wpToLL.properties
 635:sdk.c         **** 											+ wpToLL.wp_activated;
 636:sdk.c         **** 					//send waypoint
 637:sdk.c         **** 					wpCtrlAckTrigger=0;
 638:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 639:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 640:sdk.c         **** 					wpExampleWpNr++;
 641:sdk.c         **** 
 642:sdk.c         **** 					wpExampleState=3;
 643:sdk.c         **** 				}
 644:sdk.c         **** 
 645:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 646:sdk.c         **** 				{
 647:sdk.c         **** 					wpExampleActive=0;
 648:sdk.c         **** 					wpExampleState=0;
 649:sdk.c         **** 				}
 650:sdk.c         **** 
 651:sdk.c         **** 
 652:sdk.c         **** 			}
 653:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 654:sdk.c         **** 						wpExampleState=0;
 655:sdk.c         **** 		break;
 656:sdk.c         **** 
 657:sdk.c         **** 		case 3:
 658:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 659:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 660:sdk.c         **** 			{
 661:sdk.c         **** 				//check if waypoint was reached and wait time is over
 662:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 663:sdk.c         **** 				{
 664:sdk.c         **** 					//new waypoint
 665:sdk.c         **** 					double lat,lon;
 666:sdk.c         **** 
 667:sdk.c         **** 					//fill waypoint structure
 668:sdk.c         **** 					wpToLL.max_speed=100;
 669:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 670:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 671:sdk.c         **** 					wpToLL.wp_activated=1;
 672:sdk.c         **** 
 673:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 674:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 675:sdk.c         **** 
 676:sdk.c         **** 					//use current height and yaw
 677:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 678:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 679:sdk.c         **** 
 680:sdk.c         **** 					//calculate a position 15m east of origin
 681:sdk.c         **** 					xy2latlon(originLat,originLon,15.0,0.0,&lat,&lon);
 682:sdk.c         **** 
 683:sdk.c         **** 					wpToLL.X=lon*10000000;
 684:sdk.c         **** 					wpToLL.Y=lat*10000000;
 685:sdk.c         **** 
 686:sdk.c         **** 					//calc chksum
 687:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 688:sdk.c         **** 											+ wpToLL.yaw
 689:sdk.c         **** 											+ wpToLL.height
 690:sdk.c         **** 											+ wpToLL.time
 691:sdk.c         **** 											+ wpToLL.X
 692:sdk.c         **** 											+ wpToLL.Y
 693:sdk.c         **** 											+ wpToLL.max_speed
 694:sdk.c         **** 											+ wpToLL.pos_acc
 695:sdk.c         **** 											+ wpToLL.properties
 696:sdk.c         **** 											+ wpToLL.wp_activated;
 697:sdk.c         **** 
 698:sdk.c         **** 					//send waypoint
 699:sdk.c         **** 					wpCtrlAckTrigger=0;
 700:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 701:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 702:sdk.c         **** 					wpExampleWpNr++;
 703:sdk.c         **** 
 704:sdk.c         **** 					wpExampleState=4;
 705:sdk.c         **** 				}
 706:sdk.c         **** 
 707:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 708:sdk.c         **** 				{
 709:sdk.c         **** 					wpExampleActive=0;
 710:sdk.c         **** 					wpExampleState=0;
 711:sdk.c         **** 				}
 712:sdk.c         **** 
 713:sdk.c         **** 
 714:sdk.c         **** 			}
 715:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 716:sdk.c         **** 						wpExampleState=0;
 717:sdk.c         **** 		break;
 718:sdk.c         **** 
 719:sdk.c         **** 		case 4:
 720:sdk.c         **** 			//wait until cmd is processed and sent to LL processor
 721:sdk.c         **** 			if ((wpCtrlWpCmdUpdated==0) && (wpCtrlAckTrigger))
 722:sdk.c         **** 			{
 723:sdk.c         **** 				//check if waypoint was reached and wait time is over
 724:sdk.c         **** 				if (wpCtrlNavStatus&(WP_NAVSTAT_REACHED_POS_TIME))
 725:sdk.c         **** 				{
 726:sdk.c         **** 
 727:sdk.c         **** 					//fill waypoint structure
 728:sdk.c         **** 					wpToLL.max_speed=100;
 729:sdk.c         **** 					wpToLL.pos_acc=3000; //3m accuracy
 730:sdk.c         **** 					wpToLL.time=400; //4 seconds wait time
 731:sdk.c         **** 					wpToLL.wp_activated=1;
 732:sdk.c         **** 
 733:sdk.c         **** 					//see LL_HL_comm.h for WPPROP defines
 734:sdk.c         **** 					wpToLL.properties=WPPROP_ABSCOORDS|WPPROP_AUTOMATICGOTO|WPPROP_HEIGHTENABLED|WPPROP_YAWENABLED
 735:sdk.c         **** 
 736:sdk.c         **** 					//use current height and yaw
 737:sdk.c         **** 					wpToLL.yaw=RO_ALL_Data.angle_yaw; //use current yaw
 738:sdk.c         **** 					wpToLL.height=RO_ALL_Data.fusion_height; //use current height
 739:sdk.c         **** 
 740:sdk.c         **** 					//go to the beginning
 741:sdk.c         **** 
 742:sdk.c         **** 					wpToLL.X=originLon*10000000;
 743:sdk.c         **** 					wpToLL.Y=originLat*10000000;
 744:sdk.c         **** 
 745:sdk.c         **** 					//calc chksum
 746:sdk.c         **** 					wpToLL.chksum = 0xAAAA
 747:sdk.c         **** 											+ wpToLL.yaw
 748:sdk.c         **** 											+ wpToLL.height
 749:sdk.c         **** 											+ wpToLL.time
 750:sdk.c         **** 											+ wpToLL.X
 751:sdk.c         **** 											+ wpToLL.Y
 752:sdk.c         **** 											+ wpToLL.max_speed
 753:sdk.c         **** 											+ wpToLL.pos_acc
 754:sdk.c         **** 											+ wpToLL.properties
 755:sdk.c         **** 											+ wpToLL.wp_activated;
 756:sdk.c         **** 
 757:sdk.c         **** 					//send waypoint
 758:sdk.c         **** 					wpCtrlAckTrigger=0;
 759:sdk.c         **** 					wpCtrlWpCmd=WP_CMD_SINGLE_WP;
 760:sdk.c         **** 					wpCtrlWpCmdUpdated=1;
 761:sdk.c         **** 
 762:sdk.c         **** 					wpExampleWpNr++;
 763:sdk.c         **** 
 764:sdk.c         **** 					wpExampleState=0;
 765:sdk.c         **** 					wpExampleActive=0;
 766:sdk.c         **** 				}
 767:sdk.c         **** 
 768:sdk.c         **** 				if (wpCtrlNavStatus&WP_NAVSTAT_PILOT_ABORT)
 769:sdk.c         **** 				{
 770:sdk.c         **** 					wpExampleActive=0;
 771:sdk.c         **** 					wpExampleState=0;
 772:sdk.c         **** 				}
 773:sdk.c         **** 
 774:sdk.c         **** 
 775:sdk.c         **** 			}
 776:sdk.c         **** 			if ((RO_ALL_Data.channel[6]<1600) && (wpExampleActive==0))
 777:sdk.c         **** 						wpExampleState=0;
 778:sdk.c         **** 		break;
 779:sdk.c         **** 
 780:sdk.c         **** 		default:
 781:sdk.c         **** 			wpExampleState=0;
 782:sdk.c         **** 		break;
 783:sdk.c         **** 	}
 784:sdk.c         **** 
 785:sdk.c         **** }
 786:sdk.c         **** 
 787:sdk.c         **** int SDK_EXAMPLE_turn_motors_on(void) //hold throttle stick down and yaw stick fully left to turn mo
 788:sdk.c         **** {
 549              	loc 1 799 0
 550              		mov	lr, #0
 551              		.loc 1 801 0
 552              		cmp	ip, #1000
 789:sdk.c         **** 	static int timeout=0;
 790:sdk.c         **** 
 791:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 792:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 793:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 794:sdk.c         **** 							//0x03: GPS waypoint control
 795:sdk.c         **** 
 796:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 797:sdk.c         **** 							//1: enable control by HL processor
 798:sdk.c         **** 
 799:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0; //make sure stick command is accepted
 800:sdk.c         **** 
 801:sdk.c         **** 	if(++timeout>=1000)
 553              	c 1 791 0
 554 0480 7C009FE5 		mov	r3, #2
 555 0484 003090E5 		.loc 1 801 0
 556              		str	ip, [r0, #0]
 557 0488 78209FE5 		.loc 1 803 0
 558              		mov	r4, r1
 559 048c 01C083E2 		.loc 1 791 0
 560              		strb	r3, [r2, #0]
 561 0490 10402DE9 		.loc 1 799 0
 562              		strb	lr, [r2, #2]
 563              		.loc 1 796 0
 564 0494 0110A0E3 		strb	r1, [r2, #1]
 565              		.loc 1 803 0
 566 0498 00E0A0E3 		strge	lr, [r0, #0]
 567              		.loc 1 801 0
 568 049c FA0F5CE3 		bge	.L72
 569              		.loc 1 815 0
 570 04a0 0230A0E3 		ldr	r1, .L76+8
 571              		.loc 1 817 0
 572 04a4 00C080E5 		mvn	r3, #2032
 802:sdk.c         **** 	{
 803:sdk.c         **** 		timeout=0;
 573              	p, #500
 574 04a8 0140A0E1 		.loc 1 817 0
 575              		sub	r3, r3, #14
 576 04ac 0030C2E5 		strleh	r3, [r1, #4]	@ movhi
 577              		.loc 1 808 0
 578 04b0 02E0C2E5 		movgt	r3, #12	@ movhi
 579              		.loc 1 815 0
 580 04b4 0110C2E5 		movle	r3, #12	@ movhi
 581              		.loc 1 810 0
 582 04b8 00E080A5 		strgth	lr, [r1, #4]	@ movhi
 583              		.loc 1 808 0
 584 04bc 0D0000AA 		strgth	r3, [r1, #8]	@ movhi
 804:sdk.c         **** 		return(1); //1 => start sequence completed => motors running => user can stop calling this functi
 805:sdk.c         **** 	}
 806:sdk.c         **** 	else if(timeout>500) //neutral stick command for 500 ms
 807:sdk.c         **** 	{
 808:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 809:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 810:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 811:sdk.c         **** 		return(0);
 812:sdk.c         **** 	}
 813:sdk.c         **** 	else //hold stick command for 500 ms
 814:sdk.c         **** 	{
 815:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 585              	0
 586 04c0 44109FE5 		strgth	lr, [r1, #6]	@ movhi
 816:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 817:sdk.c         **** 		WO_CTRL_Input.yaw=-2047;
 587              	loc 1 816 0
 588 04c4 7F3EE0E3 		strleh	lr, [r1, #6]	@ movhi
 589              		.loc 1 815 0
 590 04c8 7D0F5CE3 		strleh	r3, [r1, #8]	@ movhi
 591              		.loc 1 810 0
 592 04cc 0E3043E2 		mov	r4, lr
 593 04d0 B430C1D1 		.loc 1 817 0
 594              		movle	r4, lr
 595 04d4 0C30A0C3 	.L72:
 596              		.loc 1 821 0
 597 04d8 0C30A0D3 		mov	r0, r4
 598              		ldmfd	sp!, {r4, lr}
 599 04dc B4E0C1C1 		bx	lr
 600              	.L77:
 601 04e0 B830C1C1 		.align	2
 602              	.L76:
 603 04e4 B6E0C1C1 		.word	timeout.2877
 604              		.word	WO_SDK
 605 04e8 B6E0C1D1 		.word	WO_CTRL_Input
 606              	.LFE10:
 608              		.align	2
 609 04f0 0E40A0E1 		.global	SDK_EXAMPLE_turn_motors_off
 611 04f4 0E40A0D1 	SDK_EXAMPLE_turn_motors_off:
 612              	.LFB11:
 818:sdk.c         **** 		return(0);
 819:sdk.c         **** 	}
 820:sdk.c         **** 
 821:sdk.c         **** }
 613              	supports interworking.
 614 04f8 0400A0E1 		@ args = 0, pretend = 0, frame = 0
 615 04fc 1040BDE8 		@ frame_needed = 0, uses_anonymous_args = 0
 616 0500 1EFF2FE1 		.loc 1 837 0
 617              		ldr	r0, .L85
 618              		ldr	r3, [r0, #0]
 619              		.loc 1 827 0
 620 0504 4C000000 		ldr	r2, .L85+4
 621 0508 00000000 		.loc 1 837 0
 622 050c 00000000 		add	ip, r3, #1
 623              		.loc 1 824 0
 624              		stmfd	sp!, {r4, lr}
 625              	.LCFI3:
 626              		.loc 1 832 0
 627              		mov	r1, #1
 628              		.loc 1 835 0
 629              		mov	lr, #0
 822:sdk.c         **** 
 823:sdk.c         **** int SDK_EXAMPLE_turn_motors_off(void) //hold throttle stick down and yaw stick fully right to turn 
 824:sdk.c         **** {
 630              	p	ip, #1000
 631              		.loc 1 827 0
 632              		mov	r3, #2
 633              		.loc 1 837 0
 825:sdk.c         **** 	static int timeout=0;
 826:sdk.c         **** 
 827:sdk.c         **** 	WO_SDK.ctrl_mode=0x02;	//0x00: direct individual motor control: individual commands for motors 0..
 828:sdk.c         **** 							//0x01: direct motor control using standard output mapping: commands are interpreted as pitc
 829:sdk.c         **** 							//0x02: attitude and throttle control: commands are input for standard attitude controller
 830:sdk.c         **** 							//0x03: GPS waypoint control
 831:sdk.c         **** 
 832:sdk.c         **** 	WO_SDK.ctrl_enabled=1;  //0: disable control by HL processor
 833:sdk.c         **** 							//1: enable control by HL processor
 834:sdk.c         **** 
 835:sdk.c         **** 	WO_SDK.disable_motor_onoff_by_stick=0; //make sure stick command is accepted
 836:sdk.c         **** 
 837:sdk.c         **** 	if(++timeout>=1000)
 634              		ip, [r0, #0]
 635 0510 7C009FE5 		.loc 1 839 0
 636 0514 003090E5 		mov	r4, r1
 637              		.loc 1 827 0
 638 0518 78209FE5 		strb	r3, [r2, #0]
 639              		.loc 1 835 0
 640 051c 01C083E2 		strb	lr, [r2, #2]
 641              		.loc 1 832 0
 642 0520 10402DE9 		strb	r1, [r2, #1]
 643              		.loc 1 839 0
 644              		strge	lr, [r0, #0]
 645 0524 0110A0E3 		.loc 1 837 0
 646              		bge	.L81
 647 0528 00E0A0E3 		.loc 1 851 0
 648              		ldr	r2, .L85+8
 649 052c FA0F5CE3 		.loc 1 842 0
 650              		cmp	ip, #500
 651 0530 0230A0E3 		.loc 1 844 0
 652              		mov	r3, r2
 653 0534 00C080E5 		.loc 1 853 0
 838:sdk.c         **** 	{
 839:sdk.c         **** 		timeout=0;
 654              	loc 1 846 0
 655 0538 0140A0E1 		strgth	lr, [r2, #4]	@ movhi
 656              		.loc 1 853 0
 657 053c 0030C2E5 		strleh	r3, [r2, #4]	@ movhi
 658              		.loc 1 844 0
 659 0540 02E0C2E5 		movgt	r2, #12	@ movhi
 660              		.loc 1 851 0
 661 0544 0110C2E5 		movle	r3, #12	@ movhi
 662              		.loc 1 844 0
 663 0548 00E080A5 		strgth	r2, [r3, #8]	@ movhi
 664              		.loc 1 845 0
 665 054c 0D0000AA 		strgth	lr, [r3, #6]	@ movhi
 840:sdk.c         **** 		return(1); //1 => stop sequence completed => motors turned off => user can stop calling this func
 841:sdk.c         **** 	}
 842:sdk.c         **** 	else if(timeout>500) //neutral stick command for 500 ms
 843:sdk.c         **** 	{
 844:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 845:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 846:sdk.c         **** 		WO_CTRL_Input.yaw=0;
 847:sdk.c         **** 		return(0);
 848:sdk.c         **** 	}
 849:sdk.c         **** 	else //hold stick command for 500 ms
 850:sdk.c         **** 	{
 851:sdk.c         **** 		WO_CTRL_Input.ctrl=0x0C;	//0x0C: enable throttle control and yaw control
 666              	0
 667 0550 44209FE5 		strleh	lr, [r2, #6]	@ movhi
 668              		.loc 1 851 0
 669 0554 7D0F5CE3 		strleh	r3, [r2, #8]	@ movhi
 670              		.loc 1 846 0
 671 0558 0230A0E1 		mov	r4, lr
 852:sdk.c         **** 		WO_CTRL_Input.thrust=0;
 853:sdk.c         **** 		WO_CTRL_Input.yaw=2047;
 672              	1 853 0
 673 055c 3E3BE0D3 		movle	r4, lr
 674              	.L81:
 675 0560 B4E0C2C1 		.loc 1 856 0
 676              		mov	r0, r4
 677 0564 B430C2D1 		ldmfd	sp!, {r4, lr}
 678              		bx	lr
 679 0568 0C20A0C3 	.L86:
 680              		.align	2
 681 056c 0C30A0D3 	.L85:
 682              		.word	timeout.2884
 683 0570 B820C3C1 		.word	WO_SDK
 684              		.word	WO_CTRL_Input
 685 0574 B6E0C3C1 	.LFE11:
 687 0578 B6E0C2D1 		.global	__floatsidf
 688              		.global	__divdf3
 689 057c B830C2D1 		.global	__muldf3
 690              		.global	__fixdfsi
 691 0580 0E40A0E1 		.align	2
 692              		.global	SDK_EXAMPLE_gps_waypoint_control
 694              	SDK_EXAMPLE_gps_waypoint_control:
 854:sdk.c         **** 		return(0);
 855:sdk.c         **** 	}
 856:sdk.c         **** }
 695              	 Function supports interworking.
 696 0588 0400A0E1 		@ args = 0, pretend = 0, frame = 28
 697 058c 1040BDE8 		@ frame_needed = 0, uses_anonymous_args = 0
 698 0590 1EFF2FE1 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 699              	.LCFI4:
 700              		.loc 1 538 0
 701              		ldr	r9, .L139
 702 0594 48000000 		.loc 1 533 0
 703 0598 00000000 		ldr	r1, .L139+4
 704 059c 00000000 		.loc 1 538 0
 705              		ldrb	r0, [r9, #0]	@ zero_extendqisi2
 706              		.loc 1 535 0
 707              		mov	r3, #1
 708              		.loc 1 533 0
 709              		mov	r2, #3
 710              		.loc 1 528 0
 711              		sub	sp, sp, #52
 712              	.LCFI5:
 713              		.loc 1 535 0
 714              		strb	r3, [r1, #1]
 715              		.loc 1 533 0
 716              		strb	r2, [r1, #0]
 717              		.loc 1 538 0
 718              		cmp	r0, #4
 719              		ldrls	pc, [pc, r0, asl #2]
 720 05a0 F04F2DE9 		b	.L88
 721              		.p2align 2
 722              	.L94:
 723 05a4 64969FE5 		.word	.L89
 724              		.word	.L90
 725 05a8 64169FE5 		.word	.L91
 726              		.word	.L92
 727 05ac 0000D9E5 		.word	.L93
 728              	.L88:
 729 05b0 0130A0E3 		.loc 1 781 0
 730              		mov	r3, #0
 731 05b4 0320A0E3 	.LVL1:
 732              	.L134:
 733 05b8 34D04DE2 		strb	r3, [r9, #0]
 734              	.LVL2:
 735              	.L124:
 736 05bc 0130C1E5 		.loc 1 785 0
 737              		add	sp, sp, #52
 738 05c0 0020C1E5 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 739              		bx	lr
 740 05c4 040050E3 	.LVL3:
 741 05c8 00F19F97 	.L93:
 742 05cc 040000EA 		.loc 1 721 0
 743              		ldr	fp, .L139+8
 744              		ldrb	sl, [fp, #0]	@ zero_extendqisi2
 745 05d0 54090000 		cmp	sl, #0
 746 05d4 64070000 		bne	.L116
 747 05d8 10090000 		ldr	r2, .L139+12
 748 05dc 20070000 		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 749 05e0 F8050000 		cmp	r3, #0
 750              		beq	.L116
 751              		.loc 1 724 0
 752 05e4 0030A0E3 		ldr	r3, .L139+16
 753              		ldrh	r7, [r3, #0]
 754              		tst	r7, #2
 755 05e8 0030C9E5 		beq	.L119
 756              		.loc 1 728 0
 757              		ldr	r5, .L139+20
 758              		.loc 1 737 0
 759 05ec 34D08DE2 		ldr	r3, .L139+24
 760 05f0 F04FBDE8 		.loc 1 728 0
 761 05f4 1EFF2FE1 		mov	ip, #100
 762              		.loc 1 737 0
 763              		ldr	r6, [r3, #36]
 764              		.loc 1 738 0
 765 05f8 18B69FE5 		ldr	r4, [r3, #132]
 766 05fc 00A0DBE5 		.loc 1 742 0
 767 0600 00005AE3 		ldr	r1, .L139+28
 768 0604 4000001A 		.loc 1 728 0
 769 0608 0C269FE5 		strb	ip, [r5, #5]
 770 060c 0030D2E5 		.loc 1 729 0
 771 0610 000053E3 		mov	lr, #2992
 772 0614 3C00000A 		.loc 1 734 0
 773              		sub	ip, ip, #77
 774 0618 00369FE5 		.loc 1 729 0
 775 061c B070D3E1 		add	lr, lr, #8
 776 0620 020017E3 		.loc 1 731 0
 777 0624 3400000A 		mov	r8, #1
 778              		.loc 1 734 0
 779 0628 F4559FE5 		strb	ip, [r5, #4]
 780              		.loc 1 730 0
 781 062c F4359FE5 		mov	ip, #400	@ movhi
 782              		.loc 1 742 0
 783 0630 64C0A0E3 		ldmia	r1, {r2-r3}
 784              		.loc 1 730 0
 785 0634 246093E5 		strh	ip, [r5, #6]	@ movhi
 786              		.loc 1 729 0
 787 0638 844093E5 		strh	lr, [r5, #8]	@ movhi
 788              		.loc 1 737 0
 789 063c E8159FE5 		str	r6, [r5, #20]
 790              		.loc 1 738 0
 791 0640 05C0C5E5 		str	r4, [r5, #24]
 792              		.loc 1 742 0
 793 0644 BBEEA0E3 		ldr	r0, .L139+32
 794              		mov	r1, #0
 795 0648 4DC04CE2 		.loc 1 731 0
 796              		str	r8, [r5, #0]
 797 064c 08E08EE2 		.loc 1 742 0
 798              		bl	__muldf3
 799 0650 0180A0E3 		bl	__fixdfsi
 800              		str	r0, [sp, #32]
 801 0654 04C0C5E5 		ldr	lr, [sp, #32]
 802              		.loc 1 743 0
 803 0658 19CEA0E3 		ldr	r1, .L139+36
 804              		.loc 1 742 0
 805 065c 0C0091E8 		str	lr, [r5, #12]
 806              		.loc 1 743 0
 807 0660 B6C0C5E1 		ldmia	r1, {r2-r3}
 808              		ldr	r0, .L139+32
 809 0664 B8E0C5E1 		mov	r1, #0
 810              		bl	__muldf3
 811 0668 146085E5 		bl	__fixdfsi
 812              		.loc 1 762 0
 813 066c 184085E5 		ldr	r2, .L139+40
 814              		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 815 0670 B8059FE5 		.loc 1 746 0
 816 0674 0010A0E3 		add	r6, r6, #400
 817              		ldr	r1, [sp, #32]
 818 0678 008085E5 		.loc 1 762 0
 819              		add	r3, r3, r8
 820 067c FEFFFFEB 		.loc 1 746 0
 821 0680 FEFFFFEB 		add	r4, r4, r6
 822 0684 20008DE5 		.loc 1 762 0
 823 0688 20E09DE5 		strb	r3, [r2, #0]
 824              		.loc 1 746 0
 825 068c A0159FE5 		add	r4, r4, r1
 826              		.loc 1 758 0
 827 0690 0CE085E5 		ldr	r2, .L139+12
 828              		.loc 1 746 0
 829 0694 0C0091E8 		sub	r4, r4, #18688
 830 0698 90059FE5 		sub	r4, r4, #34
 831 069c 0010A0E3 		.loc 1 758 0
 832 06a0 FEFFFFEB 		strb	sl, [r2, #0]
 833 06a4 FEFFFFEB 		.loc 1 759 0
 834              		ldr	r3, .L139+44
 835 06a8 88259FE5 		.loc 1 765 0
 836 06ac 0030D2E5 		ldr	r2, .L139+48
 837              		.loc 1 746 0
 838 06b0 196E86E2 		add	r4, r0, r4
 839 06b4 20109DE5 		strh	r4, [r5, #10]	@ movhi
 840              		.loc 1 760 0
 841 06b8 083083E0 		strb	r8, [fp, #0]
 842              		.loc 1 759 0
 843 06bc 064084E0 		strb	r8, [r3, #0]
 844              		.loc 1 765 0
 845 06c0 0030C2E5 		strb	sl, [r2, #0]
 846              		.loc 1 743 0
 847 06c4 014084E0 		str	r0, [r5, #16]
 848              		.loc 1 764 0
 849 06c8 4C259FE5 		strb	sl, [r9, #0]
 850              	.L119:
 851 06cc 494C44E2 		.loc 1 768 0
 852 06d0 224044E2 		tst	r7, #8
 853              		.loc 1 770 0
 854 06d4 00A0C2E5 		ldrne	r3, .L139+48
 855              		.loc 1 771 0
 856 06d8 5C359FE5 		strneb	sl, [r9, #0]
 857              		.loc 1 770 0
 858 06dc 5C259FE5 		strneb	sl, [r3, #0]
 859              	.L116:
 860 06e0 044080E0 		.loc 1 776 0
 861 06e4 BA40C5E1 		ldr	r4, .L139+24
 862              		ldrh	r3, [r4, #24]
 863 06e8 0080CBE5 		cmp	r3, #1600
 864              		bcc	.L135
 865 06ec 0080C3E5 		b	.L124
 866              	.L92:
 867 06f0 00A0C2E5 		.loc 1 659 0
 868              		ldr	sl, .L139+8
 869 06f4 100085E5 		ldrb	r8, [sl, #0]	@ zero_extendqisi2
 870              		cmp	r8, #0
 871 06f8 00A0C9E5 		bne	.L108
 872              		ldr	fp, .L139+12
 873              		ldrb	r3, [fp, #0]	@ zero_extendqisi2
 874 06fc 080017E3 		cmp	r3, #0
 875              		bne	.L137
 876 0700 38359F15 	.LVL4:
 877              	.L108:
 878 0704 00A0C915 		.loc 1 715 0
 879              		ldr	r1, .L139+24
 880 0708 00A0C315 		ldrh	r3, [r1, #24]
 881              		cmp	r3, #1600
 882              		bcs	.L124
 883 070c 14459FE5 	.L135:
 884 0710 B831D4E1 		.loc 1 776 0
 885 0714 190D53E3 		ldr	r3, .L139+48
 886 0718 0C00003A 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 887 071c B2FFFFEA 		cmp	r3, #0
 888              		beq	.L134
 889              		b	.L124
 890 0720 F0A49FE5 	.LVL5:
 891 0724 0080DAE5 	.L90:
 892 0728 000058E3 		.loc 1 547 0
 893 072c 0300001A 		ldr	r1, .L139+24
 894 0730 E4B49FE5 		ldrh	r3, [r1, #24]
 895 0734 0030DBE5 		cmp	r3, #2400
 896 0738 000053E3 		bhi	.L98
 897 073c 8F00001A 		ldr	r3, .L139+48
 898              		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 899              		cmp	r2, #0
 900              		beq	.L124
 901 0740 E0149FE5 	.L98:
 902 0744 B831D1E1 	.LBB2:
 903 0748 190D53E3 		.loc 1 553 0
 904 074c A6FFFF2A 		ldr	r6, .L139+20
 905              		.loc 1 563 0
 906              		ldr	ip, [r1, #132]
 907 0750 E8349FE5 		.loc 1 562 0
 908 0754 0030D3E5 		ldr	r1, [r1, #36]
 909 0758 000053E3 		.loc 1 565 0
 910 075c A1FFFF0A 		ldr	r4, .L139+52
 911 0760 A1FFFFEA 		.loc 1 553 0
 912              		mov	r3, #100
 913              		.loc 1 554 0
 914              		mov	r2, #2992
 915 0764 BC149FE5 		add	r2, r2, #8
 916 0768 B831D1E1 		.loc 1 556 0
 917 076c 960E53E3 		mov	sl, #1
 918 0770 0300008A 		.loc 1 553 0
 919 0774 C4349FE5 		strb	r3, [r6, #5]
 920 0778 0020D3E5 		.loc 1 562 0
 921 077c 000052E3 		str	r1, [r6, #20]
 922 0780 99FFFF0A 		.loc 1 559 0
 923              		sub	r3, r3, #77
 924              		.loc 1 555 0
 925              		mov	r1, #400	@ movhi
 926 0784 98649FE5 		.loc 1 565 0
 927              		ldr	r0, [r4, #0]
 928 0788 84C091E5 		.loc 1 563 0
 929              		str	ip, [r6, #24]
 930 078c 241091E5 		.loc 1 554 0
 931              		strh	r2, [r6, #8]	@ movhi
 932 0790 AC449FE5 		.loc 1 559 0
 933              		strb	r3, [r6, #4]
 934 0794 6430A0E3 		.loc 1 555 0
 935              		strh	r1, [r6, #6]	@ movhi
 936 0798 BB2EA0E3 		.loc 1 556 0
 937 079c 082082E2 		str	sl, [r6, #0]
 938              		.loc 1 565 0
 939 07a0 01A0A0E3 		bl	__floatsidf
 940              		ldr	r2, .L139+32
 941 07a4 0530C6E5 		mov	r3, #0
 942              		bl	__divdf3
 943 07a8 141086E5 		str	r0, [sp, #24]
 944              		str	r1, [sp, #28]
 945 07ac 4D3043E2 		ldr	r3, .L139+36
 946              		.loc 1 566 0
 947 07b0 191EA0E3 		ldr	r0, [r4, #4]
 948              		.loc 1 565 0
 949 07b4 000094E5 		add	r4, sp, #24
 950              		ldmia	r4, {r4-r5}
 951 07b8 18C086E5 		stmia	r3, {r4-r5}
 952              		.loc 1 566 0
 953 07bc B820C6E1 		bl	__floatsidf
 954              		ldr	r2, .L139+32
 955 07c0 0430C6E5 		mov	r3, #0
 956              		bl	__divdf3
 957 07c4 B610C6E1 		ldr	ip, .L139+28
 958              		mov	r4, r0
 959 07c8 00A086E5 		mov	r5, r1
 960              		stmia	ip, {r4-r5}
 961 07cc FEFFFFEB 		.loc 1 569 0
 962 07d0 58249FE5 		mov	r2, r4
 963 07d4 0030A0E3 		mov	r3, r5
 964 07d8 FEFFFFEB 		mov	r4, #0
 965 07dc 18008DE5 		mov	r5, #0
 966 07e0 1C108DE5 		stmia	sp, {r4-r5}
 967 07e4 48349FE5 		mov	r4, #1073741824
 968              		add	ip, sp, #44
 969 07e8 040094E5 		add	lr, sp, #36
 970              		add	r0, sp, #24
 971 07ec 18408DE2 		ldmia	r0, {r0-r1}
 972 07f0 300094E8 		add	r4, r4, #3014656
 973 07f4 300083E8 		mov	r5, #0
 974              		str	ip, [sp, #20]
 975 07f8 FEFFFFEB 		str	lr, [sp, #16]
 976 07fc 2C249FE5 		str	r4, [sp, #8]
 977 0800 0030A0E3 		str	r5, [sp, #12]
 978 0804 FEFFFFEB 		bl	xy2latlon
 979 0808 1CC49FE5 	.LVL6:
 980 080c 0040A0E1 		.loc 1 571 0
 981 0810 0150A0E1 		add	r2, sp, #44
 982 0814 30008CE8 		ldmia	r2, {r2-r3}
 983              		ldr	r0, .L139+32
 984 0818 0420A0E1 		mov	r1, #0
 985 081c 0530A0E1 		bl	__muldf3
 986 0820 0040A0E3 		bl	__fixdfsi
 987 0824 0050A0E3 		mov	r4, r0
 988 0828 30008DE8 	.LVL7:
 989 082c 0141A0E3 		.loc 1 572 0
 990 0830 2CC08DE2 		add	r2, sp, #36
 991 0834 24E08DE2 		ldmia	r2, {r2-r3}
 992 0838 18008DE2 		ldr	r0, .L139+32
 993 083c 030090E8 		mov	r1, #0
 994 0840 2E4884E2 		.loc 1 571 0
 995 0844 0050A0E3 		str	r4, [r6, #12]
 996 0848 14C08DE5 		.loc 1 572 0
 997 084c 10E08DE5 		bl	__muldf3
 998 0850 08408DE5 		bl	__fixdfsi
 999 0854 0C508DE5 		.loc 1 575 0
 1000 0858 FEFFFFEB 		ldrh	r2, [r6, #6]
 1001              		ldr	r3, [r6, #20]
 1002              		ldr	r1, [r6, #24]
 1003 085c 2C208DE2 		add	r3, r3, r2
 1004 0860 0C0092E8 		add	r1, r1, r3
 1005 0864 C4039FE5 		ldrb	ip, [r6, #5]	@ zero_extendqisi2
 1006 0868 0010A0E3 		add	r1, r1, r4
 1007 086c FEFFFFEB 		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1008 0870 FEFFFFEB 		add	ip, ip, r1
 1009 0874 0040A0E1 		ldrh	r2, [r6, #8]
 1010              		ldr	r1, [r6, #0]
 1011              		add	r3, r3, ip
 1012 0878 24208DE2 		add	r2, r0, r2
 1013 087c 0C0092E8 		sub	r3, r3, #21760
 1014 0880 A8039FE5 		add	r2, r2, r1
 1015 0884 0010A0E3 		sub	r3, r3, #86
 1016              		add	r2, r2, r3
 1017 0888 0C4086E5 		.loc 1 589 0
 1018              		ldr	r3, .L139+8
 1019 088c FEFFFFEB 		.loc 1 575 0
 1020 0890 FEFFFFEB 		strh	r2, [r6, #10]	@ movhi
 1021              		.loc 1 590 0
 1022 0894 B620D6E1 		ldr	r2, .L139+40
 1023 0898 143096E5 		.loc 1 587 0
 1024 089c 181096E5 		mov	r1, #0
 1025 08a0 023083E0 		.loc 1 589 0
 1026 08a4 031081E0 		strb	sl, [r3, #0]
 1027 08a8 05C0D6E5 		.loc 1 591 0
 1028 08ac 041081E0 		mov	r3, #2
 1029 08b0 0430D6E5 		.loc 1 590 0
 1030 08b4 01C08CE0 		strb	r1, [r2, #0]
 1031 08b8 B820D6E1 		.loc 1 591 0
 1032 08bc 001096E5 		strb	r3, [r9, #0]
 1033 08c0 0C3083E0 		.loc 1 587 0
 1034 08c4 022080E0 		ldr	r2, .L139+12
 1035 08c8 553C43E2 		.loc 1 588 0
 1036 08cc 012082E0 		ldr	r3, .L139+44
 1037 08d0 563043E2 		.loc 1 587 0
 1038 08d4 032082E0 		strb	r1, [r2, #0]
 1039              		.loc 1 588 0
 1040 08d8 38339FE5 		strb	sl, [r3, #0]
 1041              		.loc 1 572 0
 1042 08dc BA20C6E1 		str	r0, [r6, #16]
 1043              		b	.L124
 1044 08e0 50239FE5 	.LVL8:
 1045              	.L91:
 1046 08e4 0010A0E3 	.LBE2:
 1047              		.loc 1 598 0
 1048 08e8 00A0C3E5 		ldr	sl, .L139+8
 1049              		ldrb	r8, [sl, #0]	@ zero_extendqisi2
 1050 08ec 0230A0E3 		cmp	r8, #0
 1051              		bne	.L108
 1052 08f0 0010C2E5 		ldr	fp, .L139+12
 1053              		ldrb	r3, [fp, #0]	@ zero_extendqisi2
 1054 08f4 0030C9E5 		cmp	r3, #0
 1055              		beq	.L108
 1056 08f8 1C239FE5 		.loc 1 601 0
 1057              		ldr	r5, .L139+16
 1058 08fc 38339FE5 		ldrh	ip, [r5, #0]
 1059              		tst	ip, #2
 1060 0900 0010C2E5 		bne	.L138
 1061              	.LVL9:
 1062 0904 00A0C3E5 	.L111:
 1063              		.loc 1 707 0
 1064 0908 100086E5 		tst	ip, #8
 1065 090c 36FFFFEA 		.loc 1 709 0
 1066              		ldrne	r3, .L139+48
 1067              		.loc 1 710 0
 1068              		strneb	r8, [r9, #0]
 1069              		.loc 1 709 0
 1070 0910 00A39FE5 		strneb	r8, [r3, #0]
 1071 0914 0080DAE5 		b	.L108
 1072 0918 000058E3 	.LVL10:
 1073 091c 87FFFF1A 	.L89:
 1074 0920 F4B29FE5 		.loc 1 542 0
 1075 0924 0030DBE5 		ldr	r3, .L139+24
 1076 0928 000053E3 		ldrh	r2, [r3, #24]
 1077 092c 83FFFF0A 		cmp	r2, #1600
 1078              		bcc	.L95
 1079 0930 E8529FE5 		ldr	r3, .L139+48
 1080 0934 B0C0D5E1 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1081 0938 02001CE3 		cmp	r2, #0
 1082 093c 6400001A 		beq	.L124
 1083              	.L95:
 1084              		.loc 1 543 0
 1085              		mov	r3, #1
 1086 0940 08001CE3 		strb	r3, [r9, #0]
 1087              		b	.L124
 1088 0944 F4329F15 	.L137:
 1089              		.loc 1 662 0
 1090 0948 0080C915 		ldr	r2, .L139+16
 1091              		ldrh	ip, [r2, #0]
 1092 094c 0080C315 		tst	ip, #2
 1093 0950 7AFFFFEA 		beq	.L111
 1094              	.LBB3:
 1095              		.loc 1 681 0
 1096              		ldr	r3, .L139+36
 1097 0954 CC329FE5 		ldr	ip, .L139+28
 1098 0958 B821D3E1 		.loc 1 677 0
 1099 095c 190D52E3 		ldr	r6, .L139+24
 1100 0960 0300003A 		.loc 1 668 0
 1101 0964 D4329FE5 		ldr	r4, .L139+20
 1102 0968 0020D3E5 		.loc 1 681 0
 1103 096c 000052E3 		ldmia	r3, {r0-r1}
 1104 0970 1DFFFF0A 		.loc 1 677 0
 1105              		ldr	r5, [r6, #36]
 1106              		.loc 1 681 0
 1107 0974 0130A0E3 		ldmia	ip, {r2-r3}
 1108 0978 0030C9E5 		.loc 1 669 0
 1109 097c 1AFFFFEA 		mov	lr, #2992
 1110              		.loc 1 668 0
 1111              		mov	ip, #100
 1112 0980 98229FE5 		.loc 1 678 0
 1113 0984 B0C0D2E1 		ldr	r6, [r6, #132]
 1114 0988 02001CE3 		.loc 1 668 0
 1115 098c EBFFFF0A 		strb	ip, [r4, #5]
 1116              		.loc 1 669 0
 1117              		add	lr, lr, #8
 1118 0990 9C329FE5 		.loc 1 674 0
 1119 0994 90C29FE5 		sub	ip, ip, #77
 1120              		.loc 1 669 0
 1121 0998 88629FE5 		strh	lr, [r4, #8]	@ movhi
 1122              		.loc 1 674 0
 1123 099c 80429FE5 		strb	ip, [r4, #4]
 1124              		.loc 1 677 0
 1125 09a0 030093E8 		str	r5, [r4, #20]
 1126              		.loc 1 681 0
 1127 09a4 245096E5 		add	ip, sp, #36
 1128              		add	lr, sp, #44
 1129 09a8 0C009CE8 		mov	r5, #1073741824
 1130              		.loc 1 678 0
 1131 09ac BBEEA0E3 		str	r6, [r4, #24]
 1132              		.loc 1 681 0
 1133 09b0 64C0A0E3 		add	r5, r5, #3014656
 1134              		str	ip, [sp, #16]
 1135 09b4 846096E5 		str	lr, [sp, #20]
 1136              		.loc 1 670 0
 1137 09b8 05C0C4E5 		mov	ip, #400	@ movhi
 1138              		.loc 1 671 0
 1139 09bc 08E08EE2 		mov	lr, #1
 1140              		.loc 1 681 0
 1141 09c0 4DC04CE2 		mov	r6, #0
 1142              		.loc 1 670 0
 1143 09c4 B8E0C4E1 		strh	ip, [r4, #6]	@ movhi
 1144              		.loc 1 671 0
 1145 09c8 04C0C4E5 		str	lr, [r4, #0]
 1146              		.loc 1 681 0
 1147 09cc 145084E5 		stmia	sp, {r5-r6}
 1148              		mov	r5, #0
 1149 09d0 24C08DE2 		mov	r6, #0
 1150 09d4 2CE08DE2 		str	r5, [sp, #8]
 1151 09d8 0151A0E3 		str	r6, [sp, #12]
 1152              		bl	xy2latlon
 1153 09dc 186084E5 	.LVL11:
 1154              		.loc 1 683 0
 1155 09e0 2E5885E2 		add	r2, sp, #44
 1156 09e4 10C08DE5 		ldmia	r2, {r2-r3}
 1157 09e8 14E08DE5 		ldr	r0, .L139+32
 1158              		mov	r1, #0
 1159 09ec 19CEA0E3 		bl	__muldf3
 1160              		bl	__fixdfsi
 1161 09f0 01E0A0E3 		mov	r5, r0
 1162              	.LVL12:
 1163 09f4 0060A0E3 		.loc 1 684 0
 1164              		add	r2, sp, #36
 1165 09f8 B6C0C4E1 		ldmia	r2, {r2-r3}
 1166              		.loc 1 683 0
 1167 09fc 00E084E5 		str	r5, [r4, #12]
 1168              		.loc 1 684 0
 1169 0a00 60008DE8 		ldr	r0, .L139+32
 1170 0a04 0050A0E3 		mov	r1, #0
 1171 0a08 0060A0E3 		bl	__muldf3
 1172 0a0c 08508DE5 		bl	__fixdfsi
 1173 0a10 0C608DE5 		.loc 1 687 0
 1174 0a14 FEFFFFEB 		ldrh	r1, [r4, #6]
 1175              		ldr	r3, [r4, #20]
 1176              		ldr	r2, [r4, #24]
 1177 0a18 2C208DE2 		add	r3, r3, r1
 1178 0a1c 0C0092E8 		add	r2, r2, r3
 1179 0a20 08029FE5 		ldrb	ip, [r4, #5]	@ zero_extendqisi2
 1180 0a24 0010A0E3 		add	r2, r2, r5
 1181 0a28 FEFFFFEB 		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 1182 0a2c FEFFFFEB 		add	ip, ip, r2
 1183 0a30 0050A0E1 		ldrh	r3, [r4, #8]
 1184              		.loc 1 702 0
 1185              		ldr	r5, .L139+40
 1186 0a34 24208DE2 		.loc 1 687 0
 1187 0a38 0C0092E8 		add	r1, r1, ip
 1188              		ldr	lr, [r4, #0]
 1189 0a3c 0C5084E5 		add	r3, r0, r3
 1190              		sub	r1, r1, #21760
 1191 0a40 E8019FE5 		.loc 1 702 0
 1192 0a44 0010A0E3 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 1193 0a48 FEFFFFEB 		.loc 1 687 0
 1194 0a4c FEFFFFEB 		add	r3, r3, lr
 1195              		sub	r1, r1, #86
 1196 0a50 B610D4E1 		ldr	r6, .L139+16
 1197 0a54 143094E5 		add	r3, r3, r1
 1198 0a58 182094E5 		.loc 1 702 0
 1199 0a5c 013083E0 		add	r2, r2, #1
 1200 0a60 032082E0 		.loc 1 687 0
 1201 0a64 05C0D4E5 		strh	r3, [r4, #10]	@ movhi
 1202 0a68 052082E0 		ldrh	ip, [r6, #0]
 1203 0a6c 0410D4E5 		.loc 1 700 0
 1204 0a70 02C08CE0 		ldr	r3, .L139+44
 1205 0a74 B830D4E1 		.loc 1 701 0
 1206              		mov	lr, #1
 1207 0a78 B8519FE5 		.loc 1 702 0
 1208              		strb	r2, [r5, #0]
 1209 0a7c 0C1081E0 		.loc 1 704 0
 1210 0a80 00E094E5 		mov	r2, #4
 1211 0a84 033080E0 		.loc 1 701 0
 1212 0a88 551C41E2 		strb	lr, [sl, #0]
 1213              		.loc 1 699 0
 1214 0a8c 0020D5E5 		strb	r8, [fp, #0]
 1215              		.loc 1 700 0
 1216 0a90 0E3083E0 		strb	lr, [r3, #0]
 1217 0a94 561041E2 		.loc 1 704 0
 1218 0a98 80619FE5 		strb	r2, [r9, #0]
 1219 0a9c 013083E0 		.loc 1 684 0
 1220              		str	r0, [r4, #16]
 1221 0aa0 012082E2 		b	.L111
 1222              	.LVL13:
 1223 0aa4 BA30C4E1 	.L138:
 1224 0aa8 B0C0D6E1 	.LBE3:
 1225              	.LBB4:
 1226 0aac 88319FE5 		.loc 1 620 0
 1227              		ldr	r3, .L139+36
 1228 0ab0 01E0A0E3 		ldr	ip, .L139+28
 1229              		.loc 1 607 0
 1230 0ab4 0020C5E5 		ldr	r4, .L139+20
 1231              		.loc 1 616 0
 1232 0ab8 0420A0E3 		ldr	r6, .L139+24
 1233              		.loc 1 620 0
 1234 0abc 00E0CAE5 		ldmia	r3, {r0-r1}
 1235              		.loc 1 608 0
 1236 0ac0 0080CBE5 		mov	lr, #2992
 1237              		.loc 1 620 0
 1238 0ac4 00E0C3E5 		ldmia	ip, {r2-r3}
 1239              		.loc 1 607 0
 1240 0ac8 0020C9E5 		mov	ip, #100
 1241              		.loc 1 616 0
 1242 0acc 100084E5 		ldr	r5, [r6, #36]
 1243 0ad0 9AFFFFEA 		.loc 1 607 0
 1244              		strb	ip, [r4, #5]
 1245              		.loc 1 617 0
 1246              		ldr	r6, [r6, #132]
 1247              		.loc 1 608 0
 1248              		add	lr, lr, #8
 1249 0ad4 58319FE5 		.loc 1 613 0
 1250 0ad8 4CC19FE5 		sub	ip, ip, #77
 1251              		.loc 1 608 0
 1252 0adc 40419FE5 		strh	lr, [r4, #8]	@ movhi
 1253              		.loc 1 613 0
 1254 0ae0 40619FE5 		strb	ip, [r4, #4]
 1255              		.loc 1 620 0
 1256 0ae4 030093E8 		add	lr, sp, #36
 1257              		add	ip, sp, #44
 1258 0ae8 BBEEA0E3 		.loc 1 616 0
 1259              		str	r5, [r4, #20]
 1260 0aec 0C009CE8 		.loc 1 617 0
 1261              		str	r6, [r4, #24]
 1262 0af0 64C0A0E3 		.loc 1 620 0
 1263              		mov	r5, #1073741824
 1264 0af4 245096E5 		str	ip, [sp, #16]
 1265              		str	lr, [sp, #20]
 1266 0af8 05C0C4E5 		.loc 1 609 0
 1267              		mov	ip, #400	@ movhi
 1268 0afc 846096E5 		.loc 1 610 0
 1269              		mov	lr, #1
 1270 0b00 08E08EE2 		.loc 1 609 0
 1271              		strh	ip, [r4, #6]	@ movhi
 1272 0b04 4DC04CE2 		.loc 1 610 0
 1273              		str	lr, [r4, #0]
 1274 0b08 B8E0C4E1 		.loc 1 620 0
 1275              		add	r5, r5, #3014656
 1276 0b0c 04C0C4E5 		mov	r6, #0
 1277              		stmia	sp, {r5-r6}
 1278 0b10 24E08DE2 		str	r5, [sp, #8]
 1279 0b14 2CC08DE2 		str	r6, [sp, #12]
 1280              		bl	xy2latlon
 1281 0b18 145084E5 	.LVL14:
 1282              		.loc 1 622 0
 1283 0b1c 186084E5 		add	r2, sp, #36
 1284              		ldmia	r2, {r2-r3}
 1285 0b20 0151A0E3 		ldr	r0, .L139+32
 1286 0b24 10C08DE5 		mov	r1, #0
 1287 0b28 14E08DE5 		bl	__muldf3
 1288              		bl	__fixdfsi
 1289 0b2c 19CEA0E3 		mov	r5, r0
 1290              	.LVL15:
 1291 0b30 01E0A0E3 		.loc 1 623 0
 1292              		add	r2, sp, #44
 1293 0b34 B6C0C4E1 		ldmia	r2, {r2-r3}
 1294              		.loc 1 622 0
 1295 0b38 00E084E5 		str	r5, [r4, #12]
 1296              		.loc 1 623 0
 1297 0b3c 2E5885E2 		ldr	r0, .L139+32
 1298 0b40 0060A0E3 		mov	r1, #0
 1299 0b44 60008DE8 		bl	__muldf3
 1300 0b48 08508DE5 		bl	__fixdfsi
 1301 0b4c 0C608DE5 		.loc 1 626 0
 1302 0b50 FEFFFFEB 		ldrh	r1, [r4, #6]
 1303              		ldr	r3, [r4, #20]
 1304              		ldr	r2, [r4, #24]
 1305 0b54 24208DE2 		add	r3, r3, r1
 1306 0b58 0C0092E8 		add	r2, r2, r3
 1307 0b5c CC009FE5 		ldrb	ip, [r4, #5]	@ zero_extendqisi2
 1308 0b60 0010A0E3 		add	r2, r2, r5
 1309 0b64 FEFFFFEB 		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 1310 0b68 FEFFFFEB 		add	ip, ip, r2
 1311 0b6c 0050A0E1 		ldrh	r3, [r4, #8]
 1312              		.loc 1 640 0
 1313              		ldr	r5, .L139+40
 1314 0b70 2C208DE2 		.loc 1 626 0
 1315 0b74 0C0092E8 		add	r1, r1, ip
 1316              		ldr	lr, [r4, #0]
 1317 0b78 0C5084E5 		add	r3, r0, r3
 1318              		sub	r1, r1, #21760
 1319 0b7c AC009FE5 		.loc 1 640 0
 1320 0b80 0010A0E3 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 1321 0b84 FEFFFFEB 		.loc 1 626 0
 1322 0b88 FEFFFFEB 		add	r3, r3, lr
 1323              		sub	r1, r1, #86
 1324 0b8c B610D4E1 		ldr	r6, .L139+16
 1325 0b90 143094E5 		add	r3, r3, r1
 1326 0b94 182094E5 		.loc 1 640 0
 1327 0b98 013083E0 		add	r2, r2, #1
 1328 0b9c 032082E0 		.loc 1 626 0
 1329 0ba0 05C0D4E5 		strh	r3, [r4, #10]	@ movhi
 1330 0ba4 052082E0 		ldrh	ip, [r6, #0]
 1331 0ba8 0410D4E5 		.loc 1 638 0
 1332 0bac 02C08CE0 		ldr	r3, .L139+44
 1333 0bb0 B830D4E1 		.loc 1 639 0
 1334              		mov	lr, #1
 1335 0bb4 7C509FE5 		.loc 1 640 0
 1336              		strb	r2, [r5, #0]
 1337 0bb8 0C1081E0 		.loc 1 642 0
 1338 0bbc 00E094E5 		mov	r2, #3
 1339 0bc0 033080E0 		.loc 1 639 0
 1340 0bc4 551C41E2 		strb	lr, [sl, #0]
 1341              		.loc 1 637 0
 1342 0bc8 0020D5E5 		strb	r8, [fp, #0]
 1343              		.loc 1 638 0
 1344 0bcc 0E3083E0 		strb	lr, [r3, #0]
 1345 0bd0 561041E2 		.loc 1 642 0
 1346 0bd4 44609FE5 		strb	r2, [r9, #0]
 1347 0bd8 013083E0 		.loc 1 623 0
 1348              		str	r0, [r4, #16]
 1349 0bdc 012082E2 		b	.L111
 1350              	.L140:
 1351 0be0 BA30C4E1 		.align	2
 1352 0be4 B0C0D6E1 	.L139:
 1353              		.word	wpExampleState.2784
 1354 0be8 4C309FE5 		.word	WO_SDK
 1355              		.word	wpCtrlWpCmdUpdated
 1356 0bec 01E0A0E3 		.word	wpCtrlAckTrigger
 1357              		.word	wpCtrlNavStatus
 1358 0bf0 0020C5E5 		.word	wpToLL
 1359              		.word	RO_ALL_Data
 1360 0bf4 0320A0E3 		.word	originLon.2786
 1361              		.word	1097011920
 1362 0bf8 00E0CAE5 		.word	originLat.2785
 1363              		.word	wpExampleWpNr
 1364 0bfc 0080CBE5 		.word	wpCtrlWpCmd
 1365              		.word	wpExampleActive
 1366 0c00 00E0C3E5 		.word	GPS_Data
 1367              	.LBE4:
 1368 0c04 0020C9E5 	.LFE9:
 1370 0c08 100084E5 		.global	__floatsisf
 1371 0c0c 4BFFFFEA 		.global	__extendsfdf2
 1372              		.global	__truncdfsf2
 1373              		.align	2
 1374              		.global	SDK_Init
 1376 0c14 00000000 	SDK_Init:
 1377 0c18 00000000 	.LFB3:
 1378 0c1c 00000000 		.loc 1 198 0
 1379 0c20 00000000 		@ Function supports interworking.
 1380 0c24 00000000 		@ args = 0, pretend = 0, frame = 0
 1381 0c28 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 1382 0c2c 50000000 		.loc 1 237 0
 1383 0c30 D0126341 		ldr	r3, .L143+8
 1384 0c34 58000000 		.loc 1 215 0
 1385 0c38 00000000 		ldr	ip, .L143+12
 1386 0c3c 00000000 		.loc 1 237 0
 1387 0c40 00000000 		ldr	r0, [r3, #36]
 1388 0c44 00000000 		.loc 1 219 0
 1389              		ldr	r3, .L143+16
 1390              		.loc 1 200 0
 1391              		ldr	r1, .L143+20
 1392              		.loc 1 219 0
 1393              		str	r3, [ip, #12]	@ float
 1394              		.loc 1 212 0
 1395              		mov	r3, #1	@ movhi
 1396              		strh	r3, [r1, #0]	@ movhi
 1397              		.loc 1 223 0
 1398              		ldr	r2, .L143+24
 1399              		.loc 1 222 0
 1400              		ldr	r3, .L143+28
 1401              		.loc 1 198 0
 1402              		stmfd	sp!, {r4, r5, r6, lr}
 1403              	.LCFI6:
 1404              		.loc 1 222 0
 1405 0c48 18319FE5 		mov	r5, #0
 1406              		str	r5, [r3, #0]
 1407 0c4c 18C19FE5 		.loc 1 223 0
 1408              		str	r5, [r2, #0]
 1409 0c50 240093E5 		.loc 1 226 0
 1410              		ldr	r3, .L143+32
 1411 0c54 14319FE5 		.loc 1 227 0
 1412              		ldr	r2, .L143+36
 1413 0c58 14119FE5 		.loc 1 200 0
 1414              		mov	r4, #0
 1415 0c5c 0C308CE5 		.loc 1 226 0
 1416              		str	r4, [r3, #0]	@ float
 1417 0c60 0130A0E3 		.loc 1 227 0
 1418 0c64 B030C1E1 		str	r4, [r2, #0]	@ float
 1419              		.loc 1 228 0
 1420 0c68 08219FE5 		ldr	r3, .L143+40
 1421              		.loc 1 229 0
 1422 0c6c 08319FE5 		ldr	r2, .L143+44
 1423              		.loc 1 228 0
 1424 0c70 70402DE9 		str	r4, [r3, #0]	@ float
 1425              		.loc 1 229 0
 1426              		str	r4, [r2, #0]	@ float
 1427 0c74 0050A0E3 		.loc 1 230 0
 1428 0c78 005083E5 		ldr	r3, .L143+48
 1429              		.loc 1 231 0
 1430 0c7c 005082E5 		ldr	r2, .L143+52
 1431              		.loc 1 234 0
 1432 0c80 F8309FE5 		ldr	r6, .L143+56
 1433              		.loc 1 230 0
 1434 0c84 F8209FE5 		str	r4, [r3, #0]	@ float
 1435              		.loc 1 231 0
 1436 0c88 0040A0E3 		str	r4, [r2, #0]	@ float
 1437              		.loc 1 200 0
 1438 0c8c 004083E5 		str	r4, [r1, #8]	@ float
 1439              		.loc 1 201 0
 1440 0c90 004082E5 		str	r4, [r1, #12]	@ float
 1441              		.loc 1 202 0
 1442 0c94 EC309FE5 		str	r4, [r1, #16]	@ float
 1443              		.loc 1 203 0
 1444 0c98 EC209FE5 		str	r4, [r1, #32]	@ float
 1445              		.loc 1 204 0
 1446 0c9c 004083E5 		str	r4, [r1, #36]	@ float
 1447              		.loc 1 205 0
 1448 0ca0 004082E5 		str	r4, [r1, #40]	@ float
 1449              		.loc 1 208 0
 1450 0ca4 E4309FE5 		str	r4, [r1, #4]	@ float
 1451              		.loc 1 209 0
 1452 0ca8 E4209FE5 		str	r4, [r1, #20]	@ float
 1453              		.loc 1 210 0
 1454 0cac E4609FE5 		str	r4, [r1, #24]	@ float
 1455              		.loc 1 211 0
 1456 0cb0 004083E5 		str	r4, [r1, #28]	@ float
 1457              		.loc 1 215 0
 1458 0cb4 004082E5 		str	r4, [ip, #0]	@ float
 1459              		.loc 1 216 0
 1460 0cb8 084081E5 		str	r4, [ip, #4]	@ float
 1461              		.loc 1 217 0
 1462 0cbc 0C4081E5 		str	r4, [ip, #8]	@ float
 1463              		.loc 1 234 0
 1464 0cc0 104081E5 		str	r4, [r6, #0]	@ float
 1465              		.loc 1 235 0
 1466 0cc4 204081E5 		str	r4, [r6, #4]	@ float
 1467              		.loc 1 236 0
 1468 0cc8 244081E5 		str	r4, [r6, #8]	@ float
 1469              		.loc 1 237 0
 1470 0ccc 284081E5 		bl	__floatsisf
 1471              		bl	__extendsfdf2
 1472 0cd0 044081E5 		mov	r2, #1073741824
 1473              		add	r2, r2, #9371648
 1474 0cd4 144081E5 		add	r2, r2, #16384
 1475              		mov	r3, #0
 1476 0cd8 184081E5 		bl	__divdf3
 1477              		adr	r2, .L143
 1478 0cdc 1C4081E5 		ldmia	r2, {r2-r3}
 1479              		bl	__muldf3
 1480 0ce0 00408CE5 		bl	__truncdfsf2
 1481              		mov	r1, r4
 1482 0ce4 04408CE5 		bl	angle_diff
 1483              		.loc 1 254 0
 1484 0ce8 08408CE5 		ldr	r3, .L143+60
 1485              		.loc 1 240 0
 1486 0cec 004086E5 		ldr	r1, .L143+64
 1487              		.loc 1 254 0
 1488 0cf0 044086E5 		str	r5, [r3, #0]
 1489              		.loc 1 243 0
 1490 0cf4 084086E5 		ldr	r2, .L143+68
 1491              		.loc 1 245 0
 1492 0cf8 FEFFFFEB 		ldr	r3, .L143+72
 1493 0cfc FEFFFFEB 		.loc 1 237 0
 1494 0d00 0121A0E3 		str	r0, [r6, #12]	@ float
 1495 0d04 8F2882E2 		.loc 1 242 0
 1496 0d08 012982E2 		str	r4, [r1, #8]	@ float
 1497 0d0c 0030A0E3 		.loc 1 243 0
 1498 0d10 FEFFFFEB 		str	r5, [r2, #0]
 1499 0d14 44208FE2 		.loc 1 245 0
 1500 0d18 0C0092E8 		str	r5, [r3, #0]
 1501 0d1c FEFFFFEB 		.loc 1 240 0
 1502 0d20 FEFFFFEB 		str	r4, [r1, #0]	@ float
 1503 0d24 0410A0E1 		.loc 1 241 0
 1504 0d28 FEFFFFEB 		str	r4, [r1, #4]	@ float
 1505              		.loc 1 256 0
 1506 0d2c 68309FE5 		ldmfd	sp!, {r4, r5, r6, lr}
 1507              		bx	lr
 1508 0d30 68109FE5 	.L144:
 1509              		.align	2
 1510 0d34 005083E5 	.L143:
 1511              		.word	1066524485
 1512 0d38 64209FE5 		.word	-1525816720
 1513              		.word	RO_ALL_Data
 1514 0d3c 64309FE5 		.word	u
 1515              		.word	1100291244
 1516 0d40 0C0086E5 		.word	mocap
 1517              		.word	velocityEstHolder
 1518 0d44 084081E5 		.word	initialize
 1519              		.word	VelEstX
 1520 0d48 005082E5 		.word	VelEstY
 1521              		.word	VelEstZ
 1522 0d4c 005083E5 		.word	previousXMeas
 1523              		.word	previousYMeas
 1524 0d50 004081E5 		.word	previousZMeas
 1525              		.word	goalposyaw
 1526 0d54 044081E5 		.word	my_sdkloop_counter
 1527              		.word	errorcum
 1528 0d58 7040BDE8 		.word	IntegralHolder
 1529 0d5c 1EFF2FE1 		.word	takeoff2
 1530              	.LFE3:
 1532              		.global	__ltsf2
 1533 0d60 45DF913F 		.align	2
 1534 0d64 70E20DA5 		.global	SDK_mainloop
 1536 0d6c 00000000 	SDK_mainloop:
 1537 0d70 AC1C9541 	.LFB4:
 1538 0d74 00000000 		.loc 1 264 0
 1539 0d78 00000000 		@ Function supports interworking.
 1540 0d7c 00000000 		@ args = 0, pretend = 0, frame = 0
 1541 0d80 00000000 		@ frame_needed = 0, uses_anonymous_args = 0
 1542 0d84 00000000 		stmfd	sp!, {r4, r5, lr}
 1543 0d88 00000000 	.LCFI7:
 1544 0d8c 00000000 		.loc 1 273 0
 1545 0d90 00000000 		ldr	r4, .L168+16
 1546 0d94 00000000 		ldrsh	r0, [r4, #4]
 1547 0d98 00000000 		bl	__floatsisf
 1548 0d9c 00000000 		ldr	r5, .L168+20
 1549 0da0 00000000 		str	r0, [r5, #0]	@ float
 1550 0da4 00000000 		.loc 1 274 0
 1551 0da8 00000000 		ldr	r0, [r4, #32]
 1552              		bl	__floatsisf
 1553              		bl	__extendsfdf2
 1554              		mov	r2, #1073741824
 1555              		add	r2, r2, #9371648
 1556              		add	r2, r2, #16384
 1557              		mov	r3, #0
 1558              		bl	__divdf3
 1559              		adr	r2, .L168
 1560              		ldmia	r2, {r2-r3}
 1561              		bl	__muldf3
 1562              		bl	__truncdfsf2
 1563              		str	r0, [r5, #4]	@ float
 1564 0dac 30402DE9 		.loc 1 275 0
 1565              		ldr	r0, [r4, #28]
 1566              		bl	__floatsisf
 1567 0db0 78429FE5 		bl	__extendsfdf2
 1568 0db4 F400D4E1 		mov	r2, #1073741824
 1569 0db8 FEFFFFEB 		add	r2, r2, #9371648
 1570 0dbc 70529FE5 		add	r2, r2, #16384
 1571 0dc0 000085E5 		mov	r3, #0
 1572              		bl	__divdf3
 1573 0dc4 200094E5 		adr	r2, .L168
 1574 0dc8 FEFFFFEB 		ldmia	r2, {r2-r3}
 1575 0dcc FEFFFFEB 		bl	__muldf3
 1576 0dd0 0121A0E3 		bl	__truncdfsf2
 1577 0dd4 8F2882E2 		str	r0, [r5, #8]	@ float
 1578 0dd8 012982E2 		.loc 1 276 0
 1579 0ddc 0030A0E3 		ldr	r0, [r4, #36]
 1580 0de0 FEFFFFEB 		bl	__floatsisf
 1581 0de4 8D2F8FE2 		bl	__extendsfdf2
 1582 0de8 0C0092E8 		mov	r2, #1073741824
 1583 0dec FEFFFFEB 		add	r2, r2, #9371648
 1584 0df0 FEFFFFEB 		add	r2, r2, #16384
 1585 0df4 040085E5 		mov	r3, #0
 1586              		bl	__divdf3
 1587 0df8 1C0094E5 		adr	r2, .L168
 1588 0dfc FEFFFFEB 		ldmia	r2, {r2-r3}
 1589 0e00 FEFFFFEB 		bl	__muldf3
 1590 0e04 0121A0E3 		bl	__truncdfsf2
 1591 0e08 8F2882E2 		mov	r1, #0
 1592 0e0c 012982E2 		bl	angle_diff
 1593 0e10 0030A0E3 		.loc 1 277 0
 1594 0e14 FEFFFFEB 		ldr	r4, .L168+24
 1595 0e18 022C8FE2 		.loc 1 276 0
 1596 0e1c 0C0092E8 		str	r0, [r5, #12]	@ float
 1597 0e20 FEFFFFEB 		.loc 1 277 0
 1598 0e24 FEFFFFEB 		ldr	r0, [r4, #16]
 1599 0e28 080085E5 		bl	__floatsisf
 1600              		bl	__extendsfdf2
 1601 0e2c 240094E5 		adr	r2, .L168+8
 1602 0e30 FEFFFFEB 		ldmia	r2, {r2-r3}
 1603 0e34 FEFFFFEB 		bl	__muldf3
 1604 0e38 0121A0E3 		bl	__truncdfsf2
 1605 0e3c 8F2882E2 		str	r0, [r5, #28]	@ float
 1606 0e40 012982E2 		.loc 1 278 0
 1607 0e44 0030A0E3 		ldr	r0, [r4, #12]
 1608 0e48 FEFFFFEB 		bl	__floatsisf
 1609 0e4c 732F8FE2 		bl	__extendsfdf2
 1610 0e50 0C0092E8 		adr	r2, .L168+8
 1611 0e54 FEFFFFEB 		ldmia	r2, {r2-r3}
 1612 0e58 FEFFFFEB 		bl	__muldf3
 1613 0e5c 0010A0E3 		bl	__truncdfsf2
 1614 0e60 FEFFFFEB 		str	r0, [r5, #32]	@ float
 1615              		.loc 1 279 0
 1616 0e64 CC419FE5 		ldr	r0, [r4, #20]
 1617              		bl	__floatsisf
 1618 0e68 0C0085E5 		bl	__extendsfdf2
 1619              		adr	r2, .L168+8
 1620 0e6c 100094E5 		ldmia	r2, {r2-r3}
 1621 0e70 FEFFFFEB 		bl	__muldf3
 1622 0e74 FEFFFFEB 		bl	__truncdfsf2
 1623 0e78 6A2F8FE2 		.loc 1 281 0
 1624 0e7c 0C0092E8 		ldr	r4, .L168+28
 1625 0e80 FEFFFFEB 		ldr	r3, [r4, #0]
 1626 0e84 FEFFFFEB 		cmp	r3, #0
 1627 0e88 1C0085E5 		.loc 1 279 0
 1628              		str	r0, [r5, #36]	@ float
 1629 0e8c 0C0094E5 		.loc 1 281 0
 1630 0e90 FEFFFFEB 		bne	.L146
 1631 0e94 FEFFFFEB 		.loc 1 282 0
 1632 0e98 622F8FE2 		ldr	r3, .L168+32
 1633 0e9c 0C0092E8 		mov	r1, #-1090519040
 1634 0ea0 FEFFFFEB 		ldr	r0, [r3, #16]	@ float
 1635 0ea4 FEFFFFEB 		bl	__ltsf2
 1636 0ea8 200085E5 		cmp	r0, #0
 1637              		.loc 1 283 0
 1638 0eac 140094E5 		movlt	r3, #1
 1639 0eb0 FEFFFFEB 		strlt	r3, [r4, #0]
 1640 0eb4 FEFFFFEB 	.L146:
 1641 0eb8 5A2F8FE2 		.loc 1 288 0
 1642 0ebc 0C0092E8 		ldr	r0, .L168+36
 1643 0ec0 FEFFFFEB 		ldr	r3, [r0, #0]
 1644 0ec4 FEFFFFEB 		cmp	r3, #1
 1645              		beq	.L164
 1646 0ec8 6C419FE5 	.L150:
 1647 0ecc 003094E5 		.loc 1 293 0
 1648 0ed0 000053E3 		ldr	r0, .L168+40
 1649              		ldr	r3, [r0, #0]
 1650 0ed4 240085E5 		cmp	r3, #1
 1651              		beq	.L165
 1652 0ed8 0600001A 	.L152:
 1653              		.loc 1 299 0
 1654 0edc 5C319FE5 		bl	lab
 1655 0ee0 BF14A0E3 		.loc 1 354 0
 1656 0ee4 100093E5 		ldr	lr, .L168+44
 1657 0ee8 FEFFFFEB 		ldr	ip, [lr, #0]
 1658 0eec 000050E3 		cmp	ip, #2000
 1659              		ble	.L154
 1660 0ef0 0130A0B3 		.loc 1 355 0
 1661 0ef4 003084B5 		ldr	r3, .L168+48
 1662              		ldr	r2, [r3, #0]
 1663              		cmp	r2, #1
 1664 0ef8 44019FE5 		.loc 1 369 0
 1665 0efc 003090E5 		movne	r1, #-536870912
 1666 0f00 010053E3 		.loc 1 370 0
 1667 0f04 2800000A 		movne	r0, #52224
 1668              		.loc 1 371 0
 1669              		movne	r2, r1
 1670 0f08 38019FE5 		.loc 1 370 0
 1671 0f0c 003090E5 		addne	r0, r0, #3
 1672 0f10 010053E3 		.loc 1 355 0
 1673 0f14 1B00000A 		beq	.L166
 1674              	.L163:
 1675              		.loc 1 369 0
 1676 0f18 FEFFFFEB 		mov	r3, #128
 1677              		add	r1, r1, #163840
 1678 0f1c 28E19FE5 		str	r3, [r1, #12]
 1679 0f20 00C09EE5 		.loc 1 370 0
 1680 0f24 7D0E5CE3 		ldr	r3, .L168+52
 1681 0f28 0E0000DA 		.loc 1 371 0
 1682              		add	r2, r2, #131072
 1683 0f2c 1C319FE5 		str	r0, [r2, #8]
 1684 0f30 002093E5 		.loc 1 370 0
 1685 0f34 010052E3 		str	r0, [r3, #0]
 1686              	.L154:
 1687 0f38 0E12A013 		.loc 1 377 0
 1688              		ldr	r3, .L168+56
 1689 0f3c 330BA013 		ldr	r2, [r3, #0]
 1690              		.loc 1 375 0
 1691 0f40 0120A011 		add	r1, ip, #1
 1692              		.loc 1 377 0
 1693 0f44 03008012 		add	r2, r2, #1
 1694              		.loc 1 375 0
 1695 0f48 1E00000A 		str	r1, [lr, #0]
 1696              		.loc 1 377 0
 1697              		str	r2, [r3, #0]
 1698 0f4c 8030A0E3 		.loc 1 387 0
 1699 0f50 0A1981E2 		ldmfd	sp!, {r4, r5, lr}
 1700 0f54 0C3081E5 		bx	lr
 1701              	.L165:
 1702 0f58 F4309FE5 		.loc 1 294 0
 1703              		ldr	r2, .L168+60
 1704 0f5c 022882E2 		ldr	r3, [r2, #0]
 1705 0f60 080082E5 		ldr	r2, .L168+64
 1706              		mvn	r3, r3
 1707 0f64 000083E5 		and	r3, r3, #1
 1708              		.loc 1 295 0
 1709              		mov	r1, #0
 1710 0f68 E8309FE5 		.loc 1 294 0
 1711 0f6c 002093E5 		str	r3, [r2, #0]
 1712              		.loc 1 295 0
 1713 0f70 01108CE2 		str	r1, [r0, #0]
 1714              		b	.L152
 1715 0f74 012082E2 	.L164:
 1716              		.loc 1 289 0
 1717 0f78 00108EE5 		ldr	r3, .L168+68
 1718              		ldr	r2, .L168+72
 1719 0f7c 002083E5 		ldr	r1, [r3, #0]
 1720              		.loc 1 291 0
 1721 0f80 3040BDE8 		mov	r3, #0
 1722 0f84 1EFF2FE1 		.loc 1 289 0
 1723              		str	r1, [r2, #0]
 1724              		.loc 1 291 0
 1725 0f88 CC209FE5 		str	r3, [r0, #0]
 1726 0f8c 003092E5 		b	.L150
 1727 0f90 C8209FE5 	.L166:
 1728 0f94 0330E0E1 		.loc 1 356 0
 1729 0f98 013003E2 		ldr	r0, .L168+76
 1730              		.loc 1 357 0
 1731 0f9c 0010A0E3 		ldr	r3, .L168+80
 1732              		.loc 1 356 0
 1733 0fa0 003082E5 		ldr	r1, [r0, #0]
 1734              		.loc 1 357 0
 1735 0fa4 001080E5 		ldr	r2, [r3, #0]
 1736 0fa8 DAFFFFEA 		.loc 1 356 0
 1737              		add	r1, r1, #1
 1738              		.loc 1 357 0
 1739 0fac B0309FE5 		cmp	r2, #1
 1740 0fb0 B0209FE5 		.loc 1 356 0
 1741 0fb4 001093E5 		str	r1, [r0, #0]
 1742              		.loc 1 357 0
 1743 0fb8 0030A0E3 		beq	.L167
 1744              		.loc 1 363 0
 1745 0fbc 001082E5 		cmp	r1, #75
 1746              		.loc 1 364 0
 1747 0fc0 003080E5 		moveq	r1, #-536870912
 1748 0fc4 CFFFFFEA 		.loc 1 365 0
 1749              		moveq	r0, #52224
 1750              		.loc 1 366 0
 1751 0fc8 9C009FE5 		moveq	r2, r1
 1752              		.loc 1 365 0
 1753 0fcc 9C309FE5 		addeq	r0, r0, #2
 1754              		.loc 1 363 0
 1755 0fd0 001090E5 		bne	.L154
 1756              		b	.L163
 1757 0fd4 002093E5 	.L167:
 1758              		.loc 1 358 0
 1759 0fd8 011081E2 		cmp	r1, #5
 1760              		.loc 1 359 0
 1761 0fdc 010052E3 		subeq	r1, r1, #536870917
 1762              		.loc 1 360 0
 1763 0fe0 001080E5 		moveq	r0, #52224
 1764              		.loc 1 361 0
 1765 0fe4 0600000A 		moveq	r2, r1
 1766              		.loc 1 360 0
 1767 0fe8 4B0051E3 		addeq	r0, r0, #1
 1768              		.loc 1 358 0
 1769 0fec 0E12A003 		bne	.L154
 1770              		b	.L163
 1771 0ff0 330BA003 	.L169:
 1772              		.align	2
 1773 0ff4 0120A001 	.L168:
 1774              		.word	1066524485
 1775 0ff8 02008002 		.word	-1525816720
 1776              		.word	1060216130
 1777 0ffc D9FFFF1A 		.word	1248163157
 1778 1000 D1FFFFEA 		.word	RO_ALL_Data
 1779              		.word	imusensor
 1780              		.word	IMU_CalcData
 1781 1004 050051E3 		.word	takeoff2
 1782              		.word	mocap
 1783 1008 52124102 		.word	NewUsonicData
 1784              		.word	NewMagnetSwitch
 1785 100c 330BA003 		.word	timer
 1786              		.word	f28027_ready
 1787 1010 0120A001 		.word	SPI0command
 1788              		.word	my_sdkloop_counter
 1789 1014 01008002 		.word	MagnetSwitch
 1790              		.word	GotMagnet
 1791 1018 D2FFFF1A 		.word	UsonicData
 1792 101c CAFFFFEA 		.word	USMaxBot_range1
 1793              		.word	UsonicTimer
 1794              		.word	firebit
 1795              	.LFE4:
 1797 1024 70E20DA5 		.global	wpExampleWpNr
 1798 1028 429D313F 		.bss
 1801 1034 00000000 	wpExampleWpNr:
 1802 1038 00000000 		.space	1
 1803 103c 00000000 		.global	wpExampleActive
 1806 1048 00000000 	wpExampleActive:
 1807 104c 08000000 		.space	1
 1808 1050 00000000 		.global	emergencyModeUpdate
 1811 105c 00000000 	emergencyModeUpdate:
 1812 1060 00000000 		.space	1
 1813 1064 00000000 		.global	my_sdkloop_counter
 1814 1068 00000000 		.align	2
 1817              	my_sdkloop_counter:
 1818              		.space	4
 1819              		.global	firebit
 1820              		.data
 1821              		.align	2
 1824 0000 00       	firebit:
 1825              		.word	1
 1826              		.global	UsonicTimer
 1827              		.bss
 1828              		.align	2
 1831              	UsonicTimer:
 1832              		.space	4
 1833              		.global	SPI0data
 1834 0002 00       		.align	2
 1837              	SPI0data:
 1838              		.space	4
 1839              		.global	SPI0command
 1840 0004 00000000 		.align	2
 1843              	SPI0command:
 1844              		.space	4
 1845              		.global	f28027_ready
 1846              		.align	2
 1849              	f28027_ready:
 1850              		.space	4
 1851              		.global	UsonicData
 1852              		.align	2
 1855              	UsonicData:
 1856              		.space	4
 1857              		.global	NewUsonicData
 1858              		.align	2
 1861              	NewUsonicData:
 1862              		.space	4
 1863              		.global	USMaxBot_range1
 1864              		.align	2
 1867              	USMaxBot_range1:
 1868              		.space	4
 1869              		.global	SwitchTimer
 1870              		.align	2
 1873              	SwitchTimer:
 1874              		.space	4
 1875              		.global	readSwitchbit
 1876              		.align	2
 1879              	readSwitchbit:
 1880              		.space	4
 1881              		.global	MagnetSwitch
 1882              		.align	2
 1885              	MagnetSwitch:
 1886              		.space	4
 1887              		.global	NewMagnetSwitch
 1888              		.align	2
 1891              	NewMagnetSwitch:
 1892              		.space	4
 1893              		.global	GotMagnet
 1894              		.align	2
 1897              	GotMagnet:
 1898              		.space	4
 1899              		.global	SPItxCount
 1900              		.align	2
 1903              	SPItxCount:
 1904              		.space	4
 1905              		.global	SPItxSize
 1906              		.align	2
 1909              	SPItxSize:
 1910              		.space	4
 1911              		.global	SPItxDone
 1912              		.data
 1913              		.align	2
 1916              	SPItxDone:
 1917              		.word	1
 1918              		.global	numMissedTx
 1919              		.bss
 1920 0034 00000000 		.align	2
 1923              	numMissedTx:
 1924              		.space	4
 1925              		.global	testcount
 1926 0038 00000000 		.align	2
 1929              	testcount:
 1930              		.space	4
 1931              		.align	2
 1932 003c 00000000 	timeout.2884:
 1933              		.space	4
 1934              		.align	2
 1935              	timeout.2877:
 1936              		.space	4
 1937              		.align	2
 1938              	originLon.2786:
 1939 0004 01000000 		.space	8
 1940              		.align	2
 1941              	originLat.2785:
 1942              		.space	8
 1943              	wpExampleState.2784:
 1944              		.space	1
 1945              		.data
 1946 0040 00000000 		.align	2
 1949              	timer:
 1950              		.word	1
 1951              		.comm	GPS_timeout,4,4
 1952 0044 00000000 		.comm	SYSTEM_initialized,1,1
 1953              		.comm	imusensor,68,4
 1954              		.comm	WO_SDK,4,4
 1955 0048 00000000 		.comm	RO_ALL_Data,152,4
 1956              		.comm	RO_RC_Data,16,4
 1957              		.comm	WO_Direct_Individual_Motor_Control,12,4
 1958 004c 00000000 		.comm	WO_Direct_Motor_Control,4,4
 1959              		.comm	WO_CTRL_Input,12,4
 1960              		.comm	emergencyMode,1,1
 1961 0050 00000000 		.comm	takeoff2,4,4
 1961      00000000 
 1962              		.comm	initialize,4,4
 1963              		.comm	velocityEstHolder,4,4
 1964 0058 00000000 		.comm	VelEstX,4,4
 1964      00000000 
 1965              		.comm	VelEstY,4,4
 1966 0060 00       		.comm	VelEstZ,4,4
 1967 0061 000000   		.comm	previousXMeas,4,4
 1968              		.comm	previousYMeas,4,4
 1969              		.comm	previousZMeas,4,4
 1970              		.comm	errorcum,12,4
 1971              		.comm	IntegralHolder,4,4
 1972 0008 01000000 		.comm	SPItxArray,100,2
 1973              		.comm	f2s,4,4
 1974              		.comm	testarray,20,4
 1975              		.section	.debug_frame,"",%progbits
 1976              	.Lframe0:
 1977              		.4byte	.LECIE0-.LSCIE0
 1978              	.LSCIE0:
 1979              		.4byte	0xffffffff
 1980              		.byte	0x1
 1981              		.ascii	"\000"
 1982              		.uleb128 0x1
 1983              		.sleb128 -4
 1984              		.byte	0xe
 1985              		.byte	0xc
 1986              		.uleb128 0xd
 1987              		.uleb128 0x0
 1988              		.align	2
 1989              	.LECIE0:
 1990              	.LSFDE0:
 1991              		.4byte	.LEFDE0-.LASFDE0
 1992              	.LASFDE0:
 1993              		.4byte	.Lframe0
 1994              		.4byte	.LFB2
 1995              		.4byte	.LFE2-.LFB2
 1996              		.byte	0x4
 2186              		.2byte	0x2
DEFINED SYMBOLS
                            *ABS*:00000000 sdk.c
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:13     .text:00000000 SPI0Handler
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:20     .text:00000000 $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:255    .text:00000260 $d
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1859   .bss:0000000c SPI0data
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1865   .bss:00000010 SPI0command
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1871   .bss:00000014 f28027_ready
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1846   .data:00000000 firebit
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1877   .bss:00000018 UsonicData
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1853   .bss:00000008 UsonicTimer
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1883   .bss:0000001c NewUsonicData
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1901   .bss:00000028 readSwitchbit
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1895   .bss:00000024 SwitchTimer
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1931   .bss:0000003c SPItxSize
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1925   .bss:00000038 SPItxCount
                            *COM*:00000064 SPItxArray
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1938   .data:00000004 SPItxDone
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1907   .bss:0000002c MagnetSwitch
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1913   .bss:00000030 NewMagnetSwitch
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:275    .text:0000029c SDK_SetEmergencyMode
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:283    .text:0000029c $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:306    .text:000002d0 $d
                            *COM*:00000001 emergencyMode
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1833   .bss:00000002 emergencyModeUpdate
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:313    .text:000002d8 SDK_EXAMPLE_direct_individual_motor_commands
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:321    .text:000002d8 $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:405    .text:00000390 $d
                            *COM*:00000098 RO_ALL_Data
                            *COM*:0000000c WO_Direct_Individual_Motor_Control
                            *COM*:00000004 WO_SDK
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:414    .text:000003a0 SDK_EXAMPLE_direct_motor_commands_with_standard_output_mapping
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:421    .text:000003a0 $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:498    .text:0000043c $d
                            *COM*:00000004 WO_Direct_Motor_Control
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:507    .text:0000044c SDK_EXAMPLE_attitude_commands
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:515    .text:0000044c $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:540    .text:00000478 $d
                            *COM*:0000000c WO_CTRL_Input
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:547    .text:00000480 SDK_EXAMPLE_turn_motors_on
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:554    .text:00000480 $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:620    .text:00000504 $d
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1957   .bss:0000004c timeout.2877
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:628    .text:00000510 SDK_EXAMPLE_turn_motors_off
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:635    .text:00000510 $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:702    .text:00000594 $d
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1954   .bss:00000048 timeout.2884
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:714    .text:000005a0 SDK_EXAMPLE_gps_waypoint_control
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:720    .text:000005a0 $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:745    .text:000005d0 $d
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:752    .text:000005e4 $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1375   .text:00000c10 $d
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1965   .bss:00000060 wpExampleState.2784
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1960   .bss:00000050 originLon.2786
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1963   .bss:00000058 originLat.2785
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1823   .bss:00000000 wpExampleWpNr
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1828   .bss:00000001 wpExampleActive
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1398   .text:00000c48 SDK_Init
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1405   .text:00000c48 $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1533   .text:00000d60 $d
                            *COM*:00000004 velocityEstHolder
                            *COM*:00000004 initialize
                            *COM*:00000004 VelEstX
                            *COM*:00000004 VelEstY
                            *COM*:00000004 VelEstZ
                            *COM*:00000004 previousXMeas
                            *COM*:00000004 previousYMeas
                            *COM*:00000004 previousZMeas
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1839   .bss:00000004 my_sdkloop_counter
                            *COM*:0000000c errorcum
                            *COM*:00000004 IntegralHolder
                            *COM*:00000004 takeoff2
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1558   .text:00000dac SDK_mainloop
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1564   .text:00000dac $a
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1796   .text:00001020 $d
                            *COM*:00000044 imusensor
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1971   .data:00000008 timer
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1919   .bss:00000034 GotMagnet
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1889   .bss:00000020 USMaxBot_range1
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1847   .data:00000000 $d
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1945   .bss:00000040 numMissedTx
C:\Users\stier2\AppData\Local\Temp/ccgZdaaa.s:1951   .bss:00000044 testcount
                            *COM*:00000004 GPS_timeout
                            *COM*:00000001 SYSTEM_initialized
                            *COM*:00000010 RO_RC_Data
                            *COM*:00000004 f2s
                            *COM*:00000014 testarray

UNDEFINED SYMBOLS
__floatsidf
__divdf3
__muldf3
__fixdfsi
xy2latlon
wpCtrlWpCmdUpdated
wpCtrlAckTrigger
wpCtrlNavStatus
wpToLL
wpCtrlWpCmd
GPS_Data
__floatsisf
__extendsfdf2
__truncdfsf2
angle_diff
u
mocap
goalposyaw
__ltsf2
lab
IMU_CalcData
